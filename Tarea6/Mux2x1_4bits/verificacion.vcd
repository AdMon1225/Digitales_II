$date
	Wed Sep 29 11:35:59 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module BUF $end
$var wire 1 ! A $end
$var wire 1 " Y $end
$upscope $end
$scope module DFFSR $end
$var wire 1 # C $end
$var wire 1 $ D $end
$var wire 1 % R $end
$var wire 1 & S $end
$var reg 1 ' Q $end
$upscope $end
$scope module probadormux $end
$var wire 1 ( valid_outSynth $end
$var wire 1 ) valid_outCond $end
$var wire 1 * valid_1 $end
$var wire 1 + valid_0 $end
$var wire 1 , selector $end
$var wire 1 - reset_L $end
$var wire 4 . data_outSynth [3:0] $end
$var wire 4 / data_outCond [3:0] $end
$var wire 4 0 data_in1 [3:0] $end
$var wire 4 1 data_in0 [3:0] $end
$var wire 1 2 clk $end
$scope module mux0 $end
$var wire 1 ) valid_out $end
$var wire 1 * valid_1 $end
$var wire 1 + valid_0 $end
$var wire 1 3 validX $end
$var wire 1 , selector $end
$var wire 1 - reset_L $end
$var wire 4 4 data_out [3:0] $end
$var wire 4 5 data_in1 [3:0] $end
$var wire 4 6 data_in0 [3:0] $end
$var wire 1 2 clk $end
$scope module mux0 $end
$var wire 2 7 data_in0 [1:0] $end
$var wire 2 8 data_in1 [1:0] $end
$var wire 1 * valid_1 $end
$var wire 1 + valid_0 $end
$var wire 1 , selector $end
$var wire 1 - reset_L $end
$var wire 1 2 clk $end
$var reg 2 9 data_out [1:0] $end
$var reg 2 : mout [1:0] $end
$var reg 1 ; validOutMux $end
$var reg 1 3 valid_out $end
$upscope $end
$scope module mux1 $end
$var wire 2 < data_in0 [1:0] $end
$var wire 2 = data_in1 [1:0] $end
$var wire 1 * valid_1 $end
$var wire 1 + valid_0 $end
$var wire 1 , selector $end
$var wire 1 - reset_L $end
$var wire 1 2 clk $end
$var reg 2 > data_out [1:0] $end
$var reg 2 ? mout [1:0] $end
$var reg 1 @ validOutMux $end
$var reg 1 ) valid_out $end
$upscope $end
$upscope $end
$scope module mux1 $end
$var wire 1 ( valid_out $end
$var wire 1 * valid_1 $end
$var wire 1 + valid_0 $end
$var wire 1 A validX $end
$var wire 1 , selector $end
$var wire 1 - reset_L $end
$var wire 4 B data_out [3:0] $end
$var wire 4 C data_in1 [3:0] $end
$var wire 4 D data_in0 [3:0] $end
$var wire 1 2 clk $end
$scope module mux0 $end
$var wire 2 E data_in0 [1:0] $end
$var wire 2 F data_in1 [1:0] $end
$var wire 1 A valid_out $end
$var wire 1 * valid_1 $end
$var wire 1 + valid_0 $end
$var wire 1 , selector $end
$var wire 1 - reset_L $end
$var wire 2 G data_out [1:0] $end
$var wire 1 2 clk $end
$var wire 1 H _24_ $end
$var wire 1 I _23_ $end
$var wire 1 J _22_ $end
$var wire 1 K _21_ $end
$var wire 1 L _20_ $end
$var wire 1 M _19_ $end
$var wire 1 N _18_ $end
$var wire 1 O _17_ $end
$var wire 1 P _16_ $end
$var wire 1 Q _15_ $end
$var wire 1 R _14_ $end
$var wire 1 S _13_ $end
$var wire 1 T _12_ $end
$var wire 1 U _11_ $end
$var wire 1 V _10_ $end
$var wire 1 W _09_ $end
$var wire 1 X _08_ $end
$var wire 1 Y _07_ $end
$var wire 1 Z _06_ $end
$var wire 1 [ _05_ $end
$var wire 1 \ _04_ $end
$var wire 1 ] _03_ $end
$var wire 1 ^ _02_ $end
$var wire 1 _ _01_ $end
$var wire 2 ` _00_ [1:0] $end
$scope module _25_ $end
$var wire 1 K Y $end
$var wire 1 L B $end
$var wire 1 - A $end
$upscope $end
$scope module _26_ $end
$var wire 1 K B $end
$var wire 1 a Y $end
$var wire 1 M A $end
$upscope $end
$scope module _27_ $end
$var wire 1 J Y $end
$var wire 1 A B $end
$var wire 1 - A $end
$upscope $end
$scope module _28_ $end
$var wire 1 I Y $end
$var wire 1 W B $end
$var wire 1 - A $end
$upscope $end
$scope module _29_ $end
$var wire 1 I A $end
$var wire 1 H Y $end
$upscope $end
$scope module _30_ $end
$var wire 1 J A $end
$var wire 1 H B $end
$var wire 1 _ Y $end
$upscope $end
$scope module _31_ $end
$var wire 1 b A $end
$var wire 1 ^ Y $end
$upscope $end
$scope module _32_ $end
$var wire 1 ] Y $end
$var wire 1 + A $end
$upscope $end
$scope module _33_ $end
$var wire 1 \ Y $end
$var wire 1 , A $end
$upscope $end
$scope module _34_ $end
$var wire 1 c A $end
$var wire 1 [ Y $end
$upscope $end
$scope module _35_ $end
$var wire 1 Z Y $end
$var wire 1 , B $end
$var wire 1 * A $end
$upscope $end
$scope module _36_ $end
$var wire 1 Z A $end
$var wire 1 Y Y $end
$upscope $end
$scope module _37_ $end
$var wire 1 ] A $end
$var wire 1 X Y $end
$var wire 1 , B $end
$upscope $end
$scope module _38_ $end
$var wire 1 Y A $end
$var wire 1 X B $end
$var wire 1 W Y $end
$upscope $end
$scope module _39_ $end
$var wire 1 \ A $end
$var wire 1 d B $end
$var wire 1 V Y $end
$upscope $end
$scope module _40_ $end
$var wire 1 e B $end
$var wire 1 U Y $end
$var wire 1 , A $end
$upscope $end
$scope module _41_ $end
$var wire 1 V A $end
$var wire 1 U B $end
$var wire 1 T Y $end
$upscope $end
$scope module _42_ $end
$var wire 1 W A $end
$var wire 1 T B $end
$var wire 1 S Y $end
$upscope $end
$scope module _43_ $end
$var wire 1 [ A $end
$var wire 1 W B $end
$var wire 1 R Y $end
$upscope $end
$scope module _44_ $end
$var wire 1 R B $end
$var wire 1 Q Y $end
$var wire 1 - A $end
$upscope $end
$scope module _45_ $end
$var wire 1 S A $end
$var wire 1 Q B $end
$var wire 1 f Y $end
$upscope $end
$scope module _46_ $end
$var wire 1 \ A $end
$var wire 1 g B $end
$var wire 1 P Y $end
$upscope $end
$scope module _47_ $end
$var wire 1 h B $end
$var wire 1 O Y $end
$var wire 1 , A $end
$upscope $end
$scope module _48_ $end
$var wire 1 P A $end
$var wire 1 O B $end
$var wire 1 N Y $end
$upscope $end
$scope module _49_ $end
$var wire 1 W A $end
$var wire 1 N B $end
$var wire 1 M Y $end
$upscope $end
$scope module _50_ $end
$var wire 1 ^ A $end
$var wire 1 W B $end
$var wire 1 L Y $end
$upscope $end
$scope module _51_ $end
$var wire 1 _ D $end
$var wire 1 2 C $end
$var reg 1 A Q $end
$upscope $end
$scope module _52_ $end
$var wire 1 i D $end
$var wire 1 2 C $end
$var reg 1 j Q $end
$upscope $end
$scope module _53_ $end
$var wire 1 k D $end
$var wire 1 2 C $end
$var reg 1 l Q $end
$upscope $end
$upscope $end
$scope module mux1 $end
$var wire 2 m data_in0 [1:0] $end
$var wire 2 n data_in1 [1:0] $end
$var wire 1 ( valid_out $end
$var wire 1 * valid_1 $end
$var wire 1 + valid_0 $end
$var wire 1 , selector $end
$var wire 1 - reset_L $end
$var wire 2 o data_out [1:0] $end
$var wire 1 2 clk $end
$var wire 1 p _24_ $end
$var wire 1 q _23_ $end
$var wire 1 r _22_ $end
$var wire 1 s _21_ $end
$var wire 1 t _20_ $end
$var wire 1 u _19_ $end
$var wire 1 v _18_ $end
$var wire 1 w _17_ $end
$var wire 1 x _16_ $end
$var wire 1 y _15_ $end
$var wire 1 z _14_ $end
$var wire 1 { _13_ $end
$var wire 1 | _12_ $end
$var wire 1 } _11_ $end
$var wire 1 ~ _10_ $end
$var wire 1 !" _09_ $end
$var wire 1 "" _08_ $end
$var wire 1 #" _07_ $end
$var wire 1 $" _06_ $end
$var wire 1 %" _05_ $end
$var wire 1 &" _04_ $end
$var wire 1 '" _03_ $end
$var wire 1 (" _02_ $end
$var wire 1 )" _01_ $end
$var wire 2 *" _00_ [1:0] $end
$scope module _25_ $end
$var wire 1 s Y $end
$var wire 1 t B $end
$var wire 1 - A $end
$upscope $end
$scope module _26_ $end
$var wire 1 s B $end
$var wire 1 +" Y $end
$var wire 1 u A $end
$upscope $end
$scope module _27_ $end
$var wire 1 r Y $end
$var wire 1 ( B $end
$var wire 1 - A $end
$upscope $end
$scope module _28_ $end
$var wire 1 q Y $end
$var wire 1 !" B $end
$var wire 1 - A $end
$upscope $end
$scope module _29_ $end
$var wire 1 q A $end
$var wire 1 p Y $end
$upscope $end
$scope module _30_ $end
$var wire 1 r A $end
$var wire 1 p B $end
$var wire 1 )" Y $end
$upscope $end
$scope module _31_ $end
$var wire 1 ," A $end
$var wire 1 (" Y $end
$upscope $end
$scope module _32_ $end
$var wire 1 '" Y $end
$var wire 1 + A $end
$upscope $end
$scope module _33_ $end
$var wire 1 &" Y $end
$var wire 1 , A $end
$upscope $end
$scope module _34_ $end
$var wire 1 -" A $end
$var wire 1 %" Y $end
$upscope $end
$scope module _35_ $end
$var wire 1 $" Y $end
$var wire 1 , B $end
$var wire 1 * A $end
$upscope $end
$scope module _36_ $end
$var wire 1 $" A $end
$var wire 1 #" Y $end
$upscope $end
$scope module _37_ $end
$var wire 1 '" A $end
$var wire 1 "" Y $end
$var wire 1 , B $end
$upscope $end
$scope module _38_ $end
$var wire 1 #" A $end
$var wire 1 "" B $end
$var wire 1 !" Y $end
$upscope $end
$scope module _39_ $end
$var wire 1 &" A $end
$var wire 1 ." B $end
$var wire 1 ~ Y $end
$upscope $end
$scope module _40_ $end
$var wire 1 /" B $end
$var wire 1 } Y $end
$var wire 1 , A $end
$upscope $end
$scope module _41_ $end
$var wire 1 ~ A $end
$var wire 1 } B $end
$var wire 1 | Y $end
$upscope $end
$scope module _42_ $end
$var wire 1 !" A $end
$var wire 1 | B $end
$var wire 1 { Y $end
$upscope $end
$scope module _43_ $end
$var wire 1 %" A $end
$var wire 1 !" B $end
$var wire 1 z Y $end
$upscope $end
$scope module _44_ $end
$var wire 1 z B $end
$var wire 1 y Y $end
$var wire 1 - A $end
$upscope $end
$scope module _45_ $end
$var wire 1 { A $end
$var wire 1 y B $end
$var wire 1 0" Y $end
$upscope $end
$scope module _46_ $end
$var wire 1 &" A $end
$var wire 1 1" B $end
$var wire 1 x Y $end
$upscope $end
$scope module _47_ $end
$var wire 1 2" B $end
$var wire 1 w Y $end
$var wire 1 , A $end
$upscope $end
$scope module _48_ $end
$var wire 1 x A $end
$var wire 1 w B $end
$var wire 1 v Y $end
$upscope $end
$scope module _49_ $end
$var wire 1 !" A $end
$var wire 1 v B $end
$var wire 1 u Y $end
$upscope $end
$scope module _50_ $end
$var wire 1 (" A $end
$var wire 1 !" B $end
$var wire 1 t Y $end
$upscope $end
$scope module _51_ $end
$var wire 1 )" D $end
$var wire 1 2 C $end
$var reg 1 ( Q $end
$upscope $end
$scope module _52_ $end
$var wire 1 3" D $end
$var wire 1 2 C $end
$var reg 1 4" Q $end
$upscope $end
$scope module _53_ $end
$var wire 1 5" D $end
$var wire 1 2 C $end
$var reg 1 6" Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb0 $end
$var wire 4 7" data_outCond [3:0] $end
$var wire 4 8" data_outSynth [3:0] $end
$var wire 1 ) valid_outCond $end
$var wire 1 ( valid_outSynth $end
$var reg 1 2 clk $end
$var reg 4 9" data_in0 [3:0] $end
$var reg 4 :" data_in1 [3:0] $end
$var reg 1 - reset_L $end
$var reg 1 , selector $end
$var reg 1 + valid_0 $end
$var reg 1 * valid_1 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 :"
b0 9"
bx 8"
bx 7"
x6"
05"
x4"
03"
02"
01"
00"
0/"
0."
x-"
x,"
0+"
b0 *"
x)"
x("
0'"
1&"
x%"
1$"
0#"
1""
0!"
1~
1}
0|
1{
1z
1y
1x
1w
0v
1u
1t
1s
xr
1q
0p
bx o
b0 n
b0 m
xl
0k
xj
0i
0h
0g
0f
0e
0d
xc
xb
0a
b0 `
x_
x^
0]
1\
x[
1Z
0Y
1X
0W
1V
1U
0T
1S
1R
1Q
1P
1O
0N
1M
1L
1K
xJ
1I
0H
bx G
b0 F
b0 E
b0 D
b0 C
bx B
xA
1@
b0 ?
bx >
b0 =
b0 <
1;
b0 :
bx 9
b0 8
b0 7
b0 6
b0 5
bx 4
x3
02
b0 1
b0 0
bx /
bx .
0-
0,
1+
1*
x)
x(
x'
z&
z%
z$
z#
z"
z!
$end
#2
1)"
1_
1[
1^
1%"
1("
0y
0r
0s
0Q
0J
0K
0c
0b
0-"
0,"
b0 9
b0 /
b0 4
b0 7"
b0 >
0j
b0 G
0l
04"
b0 .
b0 B
b0 8"
b0 o
06"
1-
12
#4
02
#6
13"
b1 *"
10"
0{
1|
0~
12"
1."
b1 ?
b10 n
b10 =
b1 m
b1 <
b10 0
b10 5
b10 C
b10 :"
b1 1
b1 6
b1 D
b1 9"
1(
1A
1)
13
12
#8
02
#10
15"
b11 *"
1+"
0u
1v
0x
0%"
02"
11"
b11 ?
1-"
b0 n
b0 =
b11 m
b11 <
b1 /
b1 4
b1 7"
b1 >
b1 .
b1 B
b1 8"
b1 o
14"
b0 0
b0 5
b0 C
b0 :"
b11 1
b11 6
b11 D
b11 9"
12
#12
02
#14
05"
b1 *"
0+"
1u
0v
1x
12"
01"
b1 ?
0("
b10 n
b10 =
b1 m
b1 <
1,"
b10 0
b10 5
b10 C
b10 :"
b1 1
b1 6
b1 D
b1 9"
b11 .
b11 B
b11 8"
b11 o
16"
b11 /
b11 4
b11 7"
b11 >
12
#16
02
#18
03"
05"
00"
b0 *"
0+"
1{
1u
0|
0v
1#"
1~
1Y
1("
1w
0""
0$"
0X
0Z
02"
11"
0,"
0&"
0\
b0 ?
b0 n
b0 =
b11 m
b11 <
b1 /
b1 4
b1 7"
b1 >
b1 .
b1 B
b1 8"
b1 o
06"
1,
b0 0
b0 5
b0 C
b0 :"
b11 1
b11 6
b11 D
b11 9"
12
#20
02
#22
03"
05"
0)"
0i
0k
0_
00"
1y
b0 *"
0+"
1s
0f
1Q
b0 `
0a
1K
1p
1H
0{
0z
0u
0t
0q
0S
0R
0M
0L
0I
1v
1!"
1W
0w
0#"
0Y
1$"
1Z
12"
01"
1%"
1'"
1]
0;
0@
b10 ?
b10 n
b10 =
b1 m
b1 <
0-"
0*
0+
b10 0
b10 5
b10 C
b10 :"
b1 1
b1 6
b1 D
b1 9"
b0 .
b0 B
b0 8"
b0 o
04"
b0 /
b0 4
b0 7"
b0 >
12
#24
02
#26
0v
1w
02"
11"
b0 ?
b0 n
b0 =
b11 m
b11 <
03
0)
0A
0(
b0 0
b0 5
b0 C
b0 :"
b11 1
b11 6
b11 D
b11 9"
12
#28
02
#30
12
#32
02
#34
12
#36
02
