$date
	Mon Nov 22 21:59:44 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 1 ! active_out $end
$var wire 1 " idle_out $end
$var wire 1 # valid $end
$var wire 4 $ umbralLow [3:0] $end
$var wire 4 % umbralHigh [3:0] $end
$var wire 1 & reset $end
$var wire 1 ' req $end
$var wire 1 ( push $end
$var wire 1 ) popBP3 $end
$var wire 1 * popBP2 $end
$var wire 1 + popBP1 $end
$var wire 1 , popBP0 $end
$var wire 1 - init $end
$var wire 3 . idx [2:0] $end
$var wire 12 / fifo_dataout3 [11:0] $end
$var wire 12 0 fifo_dataout2 [11:0] $end
$var wire 12 1 fifo_dataout1 [11:0] $end
$var wire 12 2 fifo_dataout0 [11:0] $end
$var wire 12 3 data_in [11:0] $end
$var wire 5 4 data [4:0] $end
$var wire 1 5 clk $end
$scope module QoS $end
$var wire 1 6 GND $end
$var wire 1 ! active_out $end
$var wire 1 " idle_out $end
$var wire 1 # valid $end
$var wire 4 7 umbralLow [3:0] $end
$var wire 4 8 umbralL [3:0] $end
$var wire 4 9 umbralHigh [3:0] $end
$var wire 4 : umbralH [3:0] $end
$var wire 1 & reset $end
$var wire 1 ' req $end
$var wire 4 ; pushA2 [3:0] $end
$var wire 4 < pushA1 [3:0] $end
$var wire 1 ( push $end
$var wire 1 ) popBP3 $end
$var wire 1 * popBP2 $end
$var wire 1 + popBP1 $end
$var wire 1 , popBP0 $end
$var wire 1 = popA2 $end
$var wire 4 > popA1 [3:0] $end
$var wire 12 ? muxout [11:0] $end
$var wire 1 - init $end
$var wire 3 @ idx [2:0] $end
$var wire 1 A idle $end
$var wire 12 B fifo_outYSolo [11:0] $end
$var wire 12 C fifo_outYP3 [11:0] $end
$var wire 12 D fifo_outYP2 [11:0] $end
$var wire 12 E fifo_outYP1 [11:0] $end
$var wire 12 F fifo_outYP0 [11:0] $end
$var wire 12 G fifo_outBSolo [11:0] $end
$var wire 12 H fifo_dataout3 [11:0] $end
$var wire 12 I fifo_dataout2 [11:0] $end
$var wire 12 J fifo_dataout1 [11:0] $end
$var wire 12 K fifo_dataout0 [11:0] $end
$var wire 1 L emptyAUXSolo $end
$var wire 1 M emptyAUX3 $end
$var wire 1 N emptyAUX2 $end
$var wire 1 O emptyAUX1 $end
$var wire 1 P emptyAUX0 $end
$var wire 1 Q emptyA2 $end
$var wire 4 R emptyA1 [3:0] $end
$var wire 12 S demux2outP3 [11:0] $end
$var wire 12 T demux2outP2 [11:0] $end
$var wire 12 U demux2outP1 [11:0] $end
$var wire 12 V demux2outP0 [11:0] $end
$var wire 12 W demux1outP3 [11:0] $end
$var wire 12 X demux1outP2 [11:0] $end
$var wire 12 Y demux1outP1 [11:0] $end
$var wire 12 Z demux1outP0 [11:0] $end
$var wire 12 [ data_in [11:0] $end
$var wire 5 \ data [4:0] $end
$var wire 1 5 clk $end
$var wire 4 ] almost_fullA2 [3:0] $end
$var wire 4 ^ almost_fullA1 [3:0] $end
$var wire 1 _ active $end
$scope module FIFOBP0 $end
$var wire 1 6 almost_empty $end
$var wire 1 ` fifo_wr $end
$var wire 1 6 full $end
$var wire 3 a wr_ptr [2:0] $end
$var wire 1 & reset $end
$var wire 3 b rd_ptr [2:0] $end
$var wire 4 c full_umbral [3:0] $end
$var wire 1 , fifo_rd $end
$var wire 12 d fifo_out [11:0] $end
$var wire 12 e fifo_in [11:0] $end
$var wire 4 f empty_umbral [3:0] $end
$var wire 1 P empty $end
$var wire 1 5 clk $end
$var wire 1 g almost_full $end
$scope module controllog $end
$var wire 3 h empty_umbral [2:0] $end
$var wire 1 ` fifo_wr $end
$var wire 3 i full_umbral [2:0] $end
$var wire 1 & reset $end
$var wire 1 , fifo_rd $end
$var wire 1 5 clk $end
$var reg 1 j almost_empty $end
$var reg 1 g almost_full $end
$var reg 3 k contador [2:0] $end
$var reg 1 P empty $end
$var reg 1 l full $end
$upscope $end
$scope module memoriaFIFO $end
$var wire 1 ` write $end
$var wire 3 m wr_ptr [2:0] $end
$var wire 1 & reset $end
$var wire 1 , read $end
$var wire 3 n rd_ptr [2:0] $end
$var wire 12 o data [11:0] $end
$var wire 1 5 clk $end
$var reg 12 p q [11:0] $end
$var integer 32 q i [31:0] $end
$upscope $end
$scope module readlog $end
$var wire 1 & reset $end
$var wire 1 , fifo_rd $end
$var wire 1 5 clk $end
$var reg 3 r rd_ptr [2:0] $end
$upscope $end
$scope module writelog $end
$var wire 1 ` fifo_wr $end
$var wire 1 & reset $end
$var wire 1 5 clk $end
$var reg 3 s wr_ptr [2:0] $end
$upscope $end
$upscope $end
$scope module FIFOBP1 $end
$var wire 1 6 almost_empty $end
$var wire 1 t fifo_wr $end
$var wire 1 6 full $end
$var wire 3 u wr_ptr [2:0] $end
$var wire 1 & reset $end
$var wire 3 v rd_ptr [2:0] $end
$var wire 4 w full_umbral [3:0] $end
$var wire 1 + fifo_rd $end
$var wire 12 x fifo_out [11:0] $end
$var wire 12 y fifo_in [11:0] $end
$var wire 4 z empty_umbral [3:0] $end
$var wire 1 O empty $end
$var wire 1 5 clk $end
$var wire 1 { almost_full $end
$scope module controllog $end
$var wire 3 | empty_umbral [2:0] $end
$var wire 1 t fifo_wr $end
$var wire 3 } full_umbral [2:0] $end
$var wire 1 & reset $end
$var wire 1 + fifo_rd $end
$var wire 1 5 clk $end
$var reg 1 ~ almost_empty $end
$var reg 1 { almost_full $end
$var reg 3 !" contador [2:0] $end
$var reg 1 O empty $end
$var reg 1 "" full $end
$upscope $end
$scope module memoriaFIFO $end
$var wire 1 t write $end
$var wire 3 #" wr_ptr [2:0] $end
$var wire 1 & reset $end
$var wire 1 + read $end
$var wire 3 $" rd_ptr [2:0] $end
$var wire 12 %" data [11:0] $end
$var wire 1 5 clk $end
$var reg 12 &" q [11:0] $end
$var integer 32 '" i [31:0] $end
$upscope $end
$scope module readlog $end
$var wire 1 & reset $end
$var wire 1 + fifo_rd $end
$var wire 1 5 clk $end
$var reg 3 (" rd_ptr [2:0] $end
$upscope $end
$scope module writelog $end
$var wire 1 t fifo_wr $end
$var wire 1 & reset $end
$var wire 1 5 clk $end
$var reg 3 )" wr_ptr [2:0] $end
$upscope $end
$upscope $end
$scope module FIFOBP2 $end
$var wire 1 6 almost_empty $end
$var wire 1 *" fifo_wr $end
$var wire 1 6 full $end
$var wire 3 +" wr_ptr [2:0] $end
$var wire 1 & reset $end
$var wire 3 ," rd_ptr [2:0] $end
$var wire 4 -" full_umbral [3:0] $end
$var wire 1 * fifo_rd $end
$var wire 12 ." fifo_out [11:0] $end
$var wire 12 /" fifo_in [11:0] $end
$var wire 4 0" empty_umbral [3:0] $end
$var wire 1 N empty $end
$var wire 1 5 clk $end
$var wire 1 1" almost_full $end
$scope module controllog $end
$var wire 3 2" empty_umbral [2:0] $end
$var wire 1 *" fifo_wr $end
$var wire 3 3" full_umbral [2:0] $end
$var wire 1 & reset $end
$var wire 1 * fifo_rd $end
$var wire 1 5 clk $end
$var reg 1 4" almost_empty $end
$var reg 1 1" almost_full $end
$var reg 3 5" contador [2:0] $end
$var reg 1 N empty $end
$var reg 1 6" full $end
$upscope $end
$scope module memoriaFIFO $end
$var wire 1 *" write $end
$var wire 3 7" wr_ptr [2:0] $end
$var wire 1 & reset $end
$var wire 1 * read $end
$var wire 3 8" rd_ptr [2:0] $end
$var wire 12 9" data [11:0] $end
$var wire 1 5 clk $end
$var reg 12 :" q [11:0] $end
$var integer 32 ;" i [31:0] $end
$upscope $end
$scope module readlog $end
$var wire 1 & reset $end
$var wire 1 * fifo_rd $end
$var wire 1 5 clk $end
$var reg 3 <" rd_ptr [2:0] $end
$upscope $end
$scope module writelog $end
$var wire 1 *" fifo_wr $end
$var wire 1 & reset $end
$var wire 1 5 clk $end
$var reg 3 =" wr_ptr [2:0] $end
$upscope $end
$upscope $end
$scope module FIFOBP3 $end
$var wire 1 6 almost_empty $end
$var wire 1 >" fifo_wr $end
$var wire 1 6 full $end
$var wire 3 ?" wr_ptr [2:0] $end
$var wire 1 & reset $end
$var wire 3 @" rd_ptr [2:0] $end
$var wire 4 A" full_umbral [3:0] $end
$var wire 1 ) fifo_rd $end
$var wire 12 B" fifo_out [11:0] $end
$var wire 12 C" fifo_in [11:0] $end
$var wire 4 D" empty_umbral [3:0] $end
$var wire 1 M empty $end
$var wire 1 5 clk $end
$var wire 1 E" almost_full $end
$scope module controllog $end
$var wire 3 F" empty_umbral [2:0] $end
$var wire 1 >" fifo_wr $end
$var wire 3 G" full_umbral [2:0] $end
$var wire 1 & reset $end
$var wire 1 ) fifo_rd $end
$var wire 1 5 clk $end
$var reg 1 H" almost_empty $end
$var reg 1 E" almost_full $end
$var reg 3 I" contador [2:0] $end
$var reg 1 M empty $end
$var reg 1 J" full $end
$upscope $end
$scope module memoriaFIFO $end
$var wire 1 >" write $end
$var wire 3 K" wr_ptr [2:0] $end
$var wire 1 & reset $end
$var wire 1 ) read $end
$var wire 3 L" rd_ptr [2:0] $end
$var wire 12 M" data [11:0] $end
$var wire 1 5 clk $end
$var reg 12 N" q [11:0] $end
$var integer 32 O" i [31:0] $end
$upscope $end
$scope module readlog $end
$var wire 1 & reset $end
$var wire 1 ) fifo_rd $end
$var wire 1 5 clk $end
$var reg 3 P" rd_ptr [2:0] $end
$upscope $end
$scope module writelog $end
$var wire 1 >" fifo_wr $end
$var wire 1 & reset $end
$var wire 1 5 clk $end
$var reg 3 Q" wr_ptr [2:0] $end
$upscope $end
$upscope $end
$scope module FIFOBSolo $end
$var wire 1 6 almost_empty $end
$var wire 1 6 almost_full $end
$var wire 1 6 full $end
$var wire 3 R" wr_ptr [2:0] $end
$var wire 1 & reset $end
$var wire 3 S" rd_ptr [2:0] $end
$var wire 4 T" full_umbral [3:0] $end
$var wire 1 _ fifo_wr $end
$var wire 1 _ fifo_rd $end
$var wire 12 U" fifo_out [11:0] $end
$var wire 12 V" fifo_in [11:0] $end
$var wire 4 W" empty_umbral [3:0] $end
$var wire 1 L empty $end
$var wire 1 5 clk $end
$scope module controllog $end
$var wire 3 X" empty_umbral [2:0] $end
$var wire 3 Y" full_umbral [2:0] $end
$var wire 1 & reset $end
$var wire 1 _ fifo_wr $end
$var wire 1 _ fifo_rd $end
$var wire 1 5 clk $end
$var reg 1 Z" almost_empty $end
$var reg 1 [" almost_full $end
$var reg 3 \" contador [2:0] $end
$var reg 1 L empty $end
$var reg 1 ]" full $end
$upscope $end
$scope module memoriaFIFO $end
$var wire 1 _ write $end
$var wire 3 ^" wr_ptr [2:0] $end
$var wire 1 & reset $end
$var wire 1 _ read $end
$var wire 3 _" rd_ptr [2:0] $end
$var wire 12 `" data [11:0] $end
$var wire 1 5 clk $end
$var reg 12 a" q [11:0] $end
$var integer 32 b" i [31:0] $end
$upscope $end
$scope module readlog $end
$var wire 1 & reset $end
$var wire 1 _ fifo_rd $end
$var wire 1 5 clk $end
$var reg 3 c" rd_ptr [2:0] $end
$upscope $end
$scope module writelog $end
$var wire 1 & reset $end
$var wire 1 _ fifo_wr $end
$var wire 1 5 clk $end
$var reg 3 d" wr_ptr [2:0] $end
$upscope $end
$upscope $end
$scope module FIFOYP0 $end
$var wire 1 6 almost_empty $end
$var wire 1 e" fifo_rd $end
$var wire 1 f" fifo_wr $end
$var wire 1 6 full $end
$var wire 3 g" wr_ptr [2:0] $end
$var wire 1 & reset $end
$var wire 3 h" rd_ptr [2:0] $end
$var wire 4 i" full_umbral [3:0] $end
$var wire 12 j" fifo_out [11:0] $end
$var wire 12 k" fifo_in [11:0] $end
$var wire 4 l" empty_umbral [3:0] $end
$var wire 1 m" empty $end
$var wire 1 5 clk $end
$var wire 1 n" almost_full $end
$scope module controllog $end
$var wire 3 o" empty_umbral [2:0] $end
$var wire 1 e" fifo_rd $end
$var wire 1 f" fifo_wr $end
$var wire 3 p" full_umbral [2:0] $end
$var wire 1 & reset $end
$var wire 1 5 clk $end
$var reg 1 q" almost_empty $end
$var reg 1 n" almost_full $end
$var reg 3 r" contador [2:0] $end
$var reg 1 m" empty $end
$var reg 1 s" full $end
$upscope $end
$scope module memoriaFIFO $end
$var wire 1 e" read $end
$var wire 1 f" write $end
$var wire 3 t" wr_ptr [2:0] $end
$var wire 1 & reset $end
$var wire 3 u" rd_ptr [2:0] $end
$var wire 12 v" data [11:0] $end
$var wire 1 5 clk $end
$var reg 12 w" q [11:0] $end
$var integer 32 x" i [31:0] $end
$upscope $end
$scope module readlog $end
$var wire 1 e" fifo_rd $end
$var wire 1 & reset $end
$var wire 1 5 clk $end
$var reg 3 y" rd_ptr [2:0] $end
$upscope $end
$scope module writelog $end
$var wire 1 f" fifo_wr $end
$var wire 1 & reset $end
$var wire 1 5 clk $end
$var reg 3 z" wr_ptr [2:0] $end
$upscope $end
$upscope $end
$scope module FIFOYP1 $end
$var wire 1 6 almost_empty $end
$var wire 1 {" fifo_rd $end
$var wire 1 |" fifo_wr $end
$var wire 1 6 full $end
$var wire 3 }" wr_ptr [2:0] $end
$var wire 1 & reset $end
$var wire 3 ~" rd_ptr [2:0] $end
$var wire 4 !# full_umbral [3:0] $end
$var wire 12 "# fifo_out [11:0] $end
$var wire 12 ## fifo_in [11:0] $end
$var wire 4 $# empty_umbral [3:0] $end
$var wire 1 %# empty $end
$var wire 1 5 clk $end
$var wire 1 &# almost_full $end
$scope module controllog $end
$var wire 3 '# empty_umbral [2:0] $end
$var wire 1 {" fifo_rd $end
$var wire 1 |" fifo_wr $end
$var wire 3 (# full_umbral [2:0] $end
$var wire 1 & reset $end
$var wire 1 5 clk $end
$var reg 1 )# almost_empty $end
$var reg 1 &# almost_full $end
$var reg 3 *# contador [2:0] $end
$var reg 1 %# empty $end
$var reg 1 +# full $end
$upscope $end
$scope module memoriaFIFO $end
$var wire 1 {" read $end
$var wire 1 |" write $end
$var wire 3 ,# wr_ptr [2:0] $end
$var wire 1 & reset $end
$var wire 3 -# rd_ptr [2:0] $end
$var wire 12 .# data [11:0] $end
$var wire 1 5 clk $end
$var reg 12 /# q [11:0] $end
$var integer 32 0# i [31:0] $end
$upscope $end
$scope module readlog $end
$var wire 1 {" fifo_rd $end
$var wire 1 & reset $end
$var wire 1 5 clk $end
$var reg 3 1# rd_ptr [2:0] $end
$upscope $end
$scope module writelog $end
$var wire 1 |" fifo_wr $end
$var wire 1 & reset $end
$var wire 1 5 clk $end
$var reg 3 2# wr_ptr [2:0] $end
$upscope $end
$upscope $end
$scope module FIFOYP2 $end
$var wire 1 6 almost_empty $end
$var wire 1 3# fifo_rd $end
$var wire 1 4# fifo_wr $end
$var wire 1 6 full $end
$var wire 3 5# wr_ptr [2:0] $end
$var wire 1 & reset $end
$var wire 3 6# rd_ptr [2:0] $end
$var wire 4 7# full_umbral [3:0] $end
$var wire 12 8# fifo_out [11:0] $end
$var wire 12 9# fifo_in [11:0] $end
$var wire 4 :# empty_umbral [3:0] $end
$var wire 1 ;# empty $end
$var wire 1 5 clk $end
$var wire 1 <# almost_full $end
$scope module controllog $end
$var wire 3 =# empty_umbral [2:0] $end
$var wire 1 3# fifo_rd $end
$var wire 1 4# fifo_wr $end
$var wire 3 ># full_umbral [2:0] $end
$var wire 1 & reset $end
$var wire 1 5 clk $end
$var reg 1 ?# almost_empty $end
$var reg 1 <# almost_full $end
$var reg 3 @# contador [2:0] $end
$var reg 1 ;# empty $end
$var reg 1 A# full $end
$upscope $end
$scope module memoriaFIFO $end
$var wire 1 3# read $end
$var wire 1 4# write $end
$var wire 3 B# wr_ptr [2:0] $end
$var wire 1 & reset $end
$var wire 3 C# rd_ptr [2:0] $end
$var wire 12 D# data [11:0] $end
$var wire 1 5 clk $end
$var reg 12 E# q [11:0] $end
$var integer 32 F# i [31:0] $end
$upscope $end
$scope module readlog $end
$var wire 1 3# fifo_rd $end
$var wire 1 & reset $end
$var wire 1 5 clk $end
$var reg 3 G# rd_ptr [2:0] $end
$upscope $end
$scope module writelog $end
$var wire 1 4# fifo_wr $end
$var wire 1 & reset $end
$var wire 1 5 clk $end
$var reg 3 H# wr_ptr [2:0] $end
$upscope $end
$upscope $end
$scope module FIFOYP3 $end
$var wire 1 6 almost_empty $end
$var wire 1 I# fifo_rd $end
$var wire 1 J# fifo_wr $end
$var wire 1 6 full $end
$var wire 3 K# wr_ptr [2:0] $end
$var wire 1 & reset $end
$var wire 3 L# rd_ptr [2:0] $end
$var wire 4 M# full_umbral [3:0] $end
$var wire 12 N# fifo_out [11:0] $end
$var wire 12 O# fifo_in [11:0] $end
$var wire 4 P# empty_umbral [3:0] $end
$var wire 1 Q# empty $end
$var wire 1 5 clk $end
$var wire 1 R# almost_full $end
$scope module controllog $end
$var wire 3 S# empty_umbral [2:0] $end
$var wire 1 I# fifo_rd $end
$var wire 1 J# fifo_wr $end
$var wire 3 T# full_umbral [2:0] $end
$var wire 1 & reset $end
$var wire 1 5 clk $end
$var reg 1 U# almost_empty $end
$var reg 1 R# almost_full $end
$var reg 3 V# contador [2:0] $end
$var reg 1 Q# empty $end
$var reg 1 W# full $end
$upscope $end
$scope module memoriaFIFO $end
$var wire 1 I# read $end
$var wire 1 J# write $end
$var wire 3 X# wr_ptr [2:0] $end
$var wire 1 & reset $end
$var wire 3 Y# rd_ptr [2:0] $end
$var wire 12 Z# data [11:0] $end
$var wire 1 5 clk $end
$var reg 12 [# q [11:0] $end
$var integer 32 \# i [31:0] $end
$upscope $end
$scope module readlog $end
$var wire 1 I# fifo_rd $end
$var wire 1 & reset $end
$var wire 1 5 clk $end
$var reg 3 ]# rd_ptr [2:0] $end
$upscope $end
$scope module writelog $end
$var wire 1 J# fifo_wr $end
$var wire 1 & reset $end
$var wire 1 5 clk $end
$var reg 3 ^# wr_ptr [2:0] $end
$upscope $end
$upscope $end
$scope module FIFOYSolo $end
$var wire 1 6 almost_empty $end
$var wire 1 6 almost_full $end
$var wire 1 6 full $end
$var wire 3 _# wr_ptr [2:0] $end
$var wire 1 & reset $end
$var wire 3 `# rd_ptr [2:0] $end
$var wire 4 a# full_umbral [3:0] $end
$var wire 1 ( fifo_wr $end
$var wire 1 = fifo_rd $end
$var wire 12 b# fifo_out [11:0] $end
$var wire 12 c# fifo_in [11:0] $end
$var wire 4 d# empty_umbral [3:0] $end
$var wire 1 Q empty $end
$var wire 1 5 clk $end
$scope module controllog $end
$var wire 3 e# empty_umbral [2:0] $end
$var wire 3 f# full_umbral [2:0] $end
$var wire 1 & reset $end
$var wire 1 ( fifo_wr $end
$var wire 1 = fifo_rd $end
$var wire 1 5 clk $end
$var reg 1 g# almost_empty $end
$var reg 1 h# almost_full $end
$var reg 3 i# contador [2:0] $end
$var reg 1 Q empty $end
$var reg 1 j# full $end
$upscope $end
$scope module memoriaFIFO $end
$var wire 1 ( write $end
$var wire 3 k# wr_ptr [2:0] $end
$var wire 1 & reset $end
$var wire 1 = read $end
$var wire 3 l# rd_ptr [2:0] $end
$var wire 12 m# data [11:0] $end
$var wire 1 5 clk $end
$var reg 12 n# q [11:0] $end
$var integer 32 o# i [31:0] $end
$upscope $end
$scope module readlog $end
$var wire 1 & reset $end
$var wire 1 = fifo_rd $end
$var wire 1 5 clk $end
$var reg 3 p# rd_ptr [2:0] $end
$upscope $end
$scope module writelog $end
$var wire 1 & reset $end
$var wire 1 ( fifo_wr $end
$var wire 1 5 clk $end
$var reg 3 q# wr_ptr [2:0] $end
$upscope $end
$upscope $end
$scope module FSM $end
$var wire 1 Q empties0 $end
$var wire 1 r# empties1 $end
$var wire 1 s# empties2 $end
$var wire 1 t# empties3 $end
$var wire 1 u# empties4 $end
$var wire 1 L empties5 $end
$var wire 1 P empties6 $end
$var wire 1 O empties7 $end
$var wire 1 N empties8 $end
$var wire 1 M empties9 $end
$var wire 4 v# umbral_interno_L [3:0] $end
$var wire 4 w# umbral_interno_H [3:0] $end
$var wire 1 & reset $end
$var wire 1 - init $end
$var wire 1 5 clk $end
$var reg 1 _ ACTIVE_OUT $end
$var reg 1 A IDLE_OUT $end
$var reg 10 x# empty [9:0] $end
$var reg 2 y# next_state [1:0] $end
$var reg 2 z# state [1:0] $end
$var reg 4 {# umbral0 [3:0] $end
$var reg 4 |# umbral1 [3:0] $end
$var reg 4 }# umbral_out_H [3:0] $end
$var reg 4 ~# umbral_out_L [3:0] $end
$upscope $end
$scope module arbitro1 $end
$var wire 4 !$ almost_fullFIFO [3:0] $end
$var wire 12 "$ demuxin [11:0] $end
$var wire 4 #$ emptyFIFO [3:0] $end
$var wire 1 & reset $end
$var wire 1 5 clk $end
$var reg 3 $$ contadorP0 [2:0] $end
$var reg 3 %$ contadorP1 [2:0] $end
$var reg 3 &$ contadorP2 [2:0] $end
$var reg 3 '$ contadorP3 [2:0] $end
$var reg 4 ($ pop [3:0] $end
$var reg 4 )$ push [3:0] $end
$upscope $end
$scope module arbitro2 $end
$var wire 4 *$ almost_fullFIFO [3:0] $end
$var wire 12 +$ demuxin [11:0] $end
$var wire 1 Q emptyFIFO $end
$var wire 1 & reset $end
$var wire 1 5 clk $end
$var reg 1 = pop $end
$var reg 4 ,$ push [3:0] $end
$upscope $end
$scope module contadores $end
$var wire 1 A IDLE $end
$var wire 1 _ fifo4_pop $end
$var wire 1 & reset_L $end
$var wire 1 ' req $end
$var wire 3 -$ idx [2:0] $end
$var wire 1 ) fifo3_pop $end
$var wire 1 * fifo2_pop $end
$var wire 1 + fifo1_pop $end
$var wire 1 , fifo0_pop $end
$var wire 1 5 clk $end
$var reg 5 .$ counter0 [4:0] $end
$var reg 5 /$ counter1 [4:0] $end
$var reg 5 0$ counter2 [4:0] $end
$var reg 5 1$ counter3 [4:0] $end
$var reg 5 2$ counter4 [4:0] $end
$var reg 5 3$ data_out [4:0] $end
$var reg 1 # valid $end
$upscope $end
$scope module demux1 $end
$var wire 12 4$ demuxin [11:0] $end
$var reg 12 5$ demuxout0 [11:0] $end
$var reg 12 6$ demuxout1 [11:0] $end
$var reg 12 7$ demuxout2 [11:0] $end
$var reg 12 8$ demuxout3 [11:0] $end
$upscope $end
$scope module demux2 $end
$var wire 12 9$ demuxin [11:0] $end
$var reg 12 :$ demuxout0 [11:0] $end
$var reg 12 ;$ demuxout1 [11:0] $end
$var reg 12 <$ demuxout2 [11:0] $end
$var reg 12 =$ demuxout3 [11:0] $end
$upscope $end
$scope module mux1 $end
$var wire 12 >$ fifo_out_0 [11:0] $end
$var wire 12 ?$ fifo_out_1 [11:0] $end
$var wire 12 @$ fifo_out_2 [11:0] $end
$var wire 12 A$ fifo_out_3 [11:0] $end
$var wire 4 B$ pop [3:0] $end
$var reg 12 C$ mux_out [11:0] $end
$upscope $end
$upscope $end
$scope module probador $end
$var wire 1 ! active_out $end
$var wire 5 D$ data [4:0] $end
$var wire 12 E$ fifo_dataout0 [11:0] $end
$var wire 12 F$ fifo_dataout1 [11:0] $end
$var wire 12 G$ fifo_dataout2 [11:0] $end
$var wire 12 H$ fifo_dataout3 [11:0] $end
$var wire 1 " idle_out $end
$var wire 1 # valid $end
$var reg 1 5 clk $end
$var reg 12 I$ data_in [11:0] $end
$var reg 3 J$ idx [2:0] $end
$var reg 1 - init $end
$var reg 1 , popBP0 $end
$var reg 1 + popBP1 $end
$var reg 1 * popBP2 $end
$var reg 1 ) popBP3 $end
$var reg 1 ( push $end
$var reg 1 ' req $end
$var reg 1 & reset $end
$var reg 4 K$ umbralHigh [3:0] $end
$var reg 4 L$ umbralLow [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 L$
b100 K$
b0 J$
b0 I$
b0 H$
b0 G$
b0 F$
b0 E$
b0 D$
b0 C$
b0 B$
b0 A$
b0 @$
b0 ?$
b0 >$
bx =$
bx <$
bx ;$
b0 :$
b0 9$
bx 8$
bx 7$
bx 6$
b0 5$
b0 4$
b0 3$
bx 2$
bx 1$
bx 0$
bx /$
bx .$
b0 -$
b0 ,$
b0 +$
b0 *$
b0 )$
b0 ($
bx '$
bx &$
bx %$
bx $$
b0 #$
b0 "$
b0 !$
bx ~#
bx }#
b0 |#
b0 {#
bx z#
b1 y#
b0 x#
b100 w#
b1 v#
0u#
0t#
0s#
0r#
bx q#
bx p#
bx o#
b0 n#
b0 m#
bx l#
bx k#
0j#
bx i#
0h#
0g#
bx f#
bx e#
bx d#
b0 c#
b0 b#
bx a#
bx `#
bx _#
bx ^#
bx ]#
bx \#
b0 [#
bx Z#
bx Y#
bx X#
0W#
bx V#
0U#
bx T#
bx S#
0R#
0Q#
bx P#
bx O#
b0 N#
bx M#
bx L#
bx K#
0J#
0I#
bx H#
bx G#
bx F#
b0 E#
bx D#
bx C#
bx B#
0A#
bx @#
0?#
bx >#
bx =#
0<#
0;#
bx :#
bx 9#
b0 8#
bx 7#
bx 6#
bx 5#
04#
03#
bx 2#
bx 1#
bx 0#
b0 /#
bx .#
bx -#
bx ,#
0+#
bx *#
0)#
bx (#
bx '#
0&#
0%#
bx $#
bx ##
b0 "#
bx !#
bx ~"
bx }"
0|"
0{"
bx z"
bx y"
bx x"
b0 w"
b0 v"
bx u"
bx t"
0s"
bx r"
0q"
bx p"
bx o"
0n"
0m"
bx l"
b0 k"
b0 j"
bx i"
bx h"
bx g"
0f"
0e"
bx d"
bx c"
bx b"
b0 a"
b0 `"
bx _"
bx ^"
0]"
bx \"
0["
0Z"
bx Y"
bx X"
bx W"
b0 V"
b0 U"
bx T"
bx S"
bx R"
bx Q"
bx P"
bx O"
b0 N"
bx M"
bx L"
bx K"
0J"
bx I"
0H"
bx G"
bx F"
0E"
bx D"
bx C"
b0 B"
bx A"
bx @"
bx ?"
0>"
bx ="
bx <"
bx ;"
b0 :"
bx 9"
bx 8"
bx 7"
06"
bx 5"
04"
bx 3"
bx 2"
01"
bx 0"
bx /"
b0 ."
bx -"
bx ,"
bx +"
0*"
bx )"
bx ("
bx '"
b0 &"
bx %"
bx $"
bx #"
0""
bx !"
0~
bx }
bx |
0{
bx z
bx y
b0 x
bx w
bx v
bx u
0t
bx s
bx r
bx q
b0 p
b0 o
bx n
bx m
0l
bx k
0j
bx i
bx h
0g
bx f
b0 e
b0 d
bx c
bx b
bx a
0`
x_
b0 ^
b0 ]
b0 \
b0 [
b0 Z
bx Y
bx X
bx W
b0 V
bx U
bx T
bx S
b0 R
0Q
0P
0O
0N
0M
0L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
xA
b0 @
b0 ?
b0 >
0=
b0 <
b0 ;
bx :
b100 9
bx 8
b1 7
06
05
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
0-
0,
0+
0*
0)
0(
0'
0&
b100 %
b1 $
0#
z"
z!
$end
#1
b0 f#
b0 T#
b0 >#
b0 (#
b0 p"
b0 Y"
b0 G"
b0 3"
b0 }
b0 i
b0 e#
b0 S#
b0 =#
b0 '#
b0 o"
b0 X"
b0 F"
b0 2"
b0 |
b0 h
b0 :
b0 c
b0 w
b0 -"
b0 A"
b0 T"
b0 i"
b0 !#
b0 7#
b0 M#
b0 a#
b0 }#
b0 8
b0 f
b0 z
b0 0"
b0 D"
b0 W"
b0 l"
b0 $#
b0 :#
b0 P#
b0 d#
b0 ~#
0_
0A
b0 _#
b0 k#
b0 q#
b0 `#
b0 l#
b0 p#
b0 i#
b0 g"
b0 t"
b0 z"
b0 h"
b0 u"
b0 y"
b0 r"
b0 }"
b0 ,#
b0 2#
b0 ~"
b0 -#
b0 1#
b0 *#
b0 5#
b0 B#
b0 H#
b0 6#
b0 C#
b0 G#
b0 @#
b0 K#
b0 X#
b0 ^#
b0 L#
b0 Y#
b0 ]#
b0 V#
b0 R"
b0 ^"
b0 d"
b0 S"
b0 _"
b0 c"
b0 \"
b0 a
b0 m
b0 s
b0 b
b0 n
b0 r
b0 k
b0 u
b0 #"
b0 )"
b0 v
b0 $"
b0 ("
b0 !"
b0 +"
b0 7"
b0 ="
b0 ,"
b0 8"
b0 <"
b0 5"
b0 ?"
b0 K"
b0 Q"
b0 @"
b0 L"
b0 P"
b0 I"
b0 '$
b0 &$
b0 %$
b0 $$
b0 2$
b0 1$
b0 0$
b0 /$
b0 .$
b0 z#
b1000 o#
b1000 x"
b1000 0#
b1000 F#
b1000 \#
b1000 b"
b1000 q
b1000 '"
b1000 ;"
b1000 O"
b100 |#
b1 {#
15
#2
05
#3
b1000 O"
b1000 ;"
b1000 '"
b1000 q
b1000 b"
b1000 \#
b1000 F#
b1000 0#
b1000 x"
b1000 o#
15
#4
05
#5
b1000 o#
b1000 x"
b1000 0#
b1000 F#
b1000 \#
b1000 b"
b1000 q
b1000 '"
b1000 ;"
b1000 O"
15
#6
05
#7
0e"
0f"
1g
1{
11"
b1111 ^
b1111 !$
1E"
1["
1n"
1&#
1<#
b1111 ]
b1111 *$
1R#
x6
1h#
b0 >
b0 ($
b0 B$
b0 ;
b0 ,$
0=
1&
b1000 O"
b1000 ;"
b1000 '"
b1000 q
b1000 b"
b1000 \#
b1000 F#
b1000 0#
b1000 x"
b1000 o#
15
#8
05
#9
1u#
1t#
1s#
1r#
b1111111111 x#
1Q
1g#
0h#
1Q#
1U#
0R#
1;#
1?#
0<#
1%#
1)#
0&#
b1111 R
b1111 #$
1m"
1q"
b0 ]
b0 *$
0n"
1L
1Z"
0["
1M
1H"
0E"
1N
14"
01"
1O
1~
0{
1P
1j
b0 ^
b0 !$
0g
b11 f#
b11 T#
b11 >#
b11 (#
b11 p"
b11 Y"
b11 G"
b11 3"
b11 }
b11 i
b1 e#
b1 S#
b1 =#
b1 '#
b1 o"
b1 X"
b1 F"
b1 2"
b1 |
b1 h
b11 :
b11 c
b11 w
b11 -"
b11 A"
b11 T"
b11 i"
b11 !#
b11 7#
b11 M#
b11 a#
b11 }#
b1 8
b1 f
b1 z
b1 0"
b1 D"
b1 W"
b1 l"
b1 $#
b1 :#
b1 P#
b1 d#
b1 ~#
b1 z#
b11 %
b11 9
b11 w#
b11 K$
1-
15
#10
05
#11
b10 y#
0-
b11 |#
15
#12
05
#13
1A
b10 z#
15
#14
05
#15
15
#16
05
#17
1(
b1101111101 3
b1101111101 [
b1101111101 c#
b1101111101 m#
b1101111101 I$
15
#18
05
#19
b1101111101 Z
b1101111101 k"
b1101111101 v"
b1101111101 5$
b1101111101 B
b1101111101 b#
b1101111101 n#
b1101111101 +$
b1101111101 4$
b111100000100 3
b111100000100 [
b111100000100 c#
b111100000100 m#
b111100000100 I$
b1 _#
b1 k#
b1 q#
1f"
b11 y#
b1111111110 x#
b1 ;
b1 ,$
1=
1g#
0Q
b1 i#
15
#20
05
#21
1J#
0f"
b1000 ;
b1000 ,$
1=
b111100000100 W
b111100000100 O#
b111100000100 Z#
b111100000100 8$
b1101111101 ?
b1101111101 V"
b1101111101 `"
b1101111101 C$
b111100000100 B
b111100000100 b#
b111100000100 n#
b111100000100 +$
b111100000100 4$
b1101111101 F
b1101111101 j"
b1101111101 w"
b1101111101 >$
1_
0A
b10 _#
b10 k#
b10 q#
b1 `#
b1 l#
b1 p#
b1 g"
b1 t"
b1 z"
b11 z#
b111010010101 3
b111010010101 [
b111010010101 c#
b111010010101 m#
b111010010101 I$
b1111111100 x#
1e"
0r#
b1 >
b1 ($
b1 B$
1g#
1q"
b1110 R
b1110 #$
0m"
b1 i#
b1 r"
15
#22
05
#23
b111100000100 C
b111100000100 N#
b111100000100 [#
b111100000100 A$
1I#
0e"
1r#
b1000 ;
b1000 ,$
1=
b111010010101 W
b111010010101 O#
b111010010101 Z#
b111010010101 8$
1m"
1q"
b0 F
b0 j"
b0 w"
b0 >$
b111010010101 B
b111010010101 b#
b111010010101 n#
b111010010101 +$
b111010010101 4$
b101010101110 3
b101010101110 [
b101010101110 c#
b101010101110 m#
b101010101110 I$
b1 2$
b1 S"
b1 _"
b1 c"
b1 R"
b1 ^"
b1 d"
b1 K#
b1 X#
b1 ^#
b0 r"
b1 h"
b1 u"
b1 y"
b10 `#
b10 l#
b10 p#
b11 _#
b11 k#
b11 q#
b111100000100 ?
b111100000100 V"
b111100000100 `"
b111100000100 C$
b1111101110 x#
0u#
b1000 >
b1000 ($
b1000 B$
1Z"
1L
1U#
b111 R
b111 #$
0Q#
1g#
b1 $$
b0 \"
b1 V#
b1 i#
15
#24
05
#25
14#
0J#
b100 ;
b100 ,$
1=
b101010101110 X
b101010101110 9#
b101010101110 D#
b101010101110 7$
b101010101110 B
b101010101110 b#
b101010101110 n#
b101010101110 +$
b101010101110 4$
b100 _#
b100 k#
b100 q#
b11 `#
b11 l#
b11 p#
b10 K#
b10 X#
b10 ^#
b1 L#
b1 Y#
b1 ]#
b10 R"
b10 ^"
b10 d"
b10 S"
b10 _"
b10 c"
b10 2$
b101101011010 3
b101101011010 [
b101101011010 c#
b101101011010 m#
b101101011010 I$
b0 C
b0 N#
b0 [#
b0 A$
b0 ?
b0 V"
b0 `"
b0 C$
0I#
1g#
1U#
1Z"
1L
b0 >
b0 ($
b0 B$
b1 i#
b1 V#
b0 \"
b1 '$
15
#26
05
#27
b101010101110 ?
b101010101110 V"
b101010101110 `"
b101010101110 C$
b100 ;
b100 ,$
1=
b101101011010 X
b101101011010 9#
b101101011010 D#
b101101011010 7$
b101010101110 D
b101010101110 8#
b101010101110 E#
b101010101110 @$
b101101011010 B
b101101011010 b#
b101101011010 n#
b101101011010 +$
b101101011010 4$
b11 2$
b0 '$
b0 $$
b11 S"
b11 _"
b11 c"
b11 R"
b11 ^"
b11 d"
b1 5#
b1 B#
b1 H#
b100 `#
b100 l#
b100 p#
b101 _#
b101 k#
b101 q#
13#
b1111100110 x#
0t#
b100 >
b100 ($
b100 B$
1Z"
1L
1?#
b11 R
b11 #$
0;#
1g#
b0 \"
b1 @#
b1 i#
15
#28
05
#29
b101101011010 D
b101101011010 8#
b101101011010 E#
b101101011010 @$
b110 _#
b110 k#
b110 q#
b101 `#
b101 l#
b101 p#
b10 5#
b10 B#
b10 H#
b1 6#
b1 C#
b1 G#
b100 R"
b100 ^"
b100 d"
b100 S"
b100 _"
b100 c"
b100 2$
b101101011010 ?
b101101011010 V"
b101101011010 `"
b101101011010 C$
1g#
1?#
1Z"
1L
b100 >
b100 ($
b100 B$
b1 i#
b1 @#
b0 \"
b1 &$
15
#30
05
#31
b101 2$
b101 S"
b101 _"
b101 c"
b101 R"
b101 ^"
b101 d"
b10 6#
b10 C#
b10 G#
b11 5#
b11 B#
b11 H#
b110 `#
b110 l#
b110 p#
b111 _#
b111 k#
b111 q#
b111010010101 C
b111010010101 N#
b111010010101 [#
b111010010101 A$
b0 D
b0 8#
b0 E#
b0 @$
1I#
b111010010101 ?
b111010010101 V"
b111010010101 `"
b111010010101 C$
03#
b1000 >
b1000 ($
b1000 B$
1Z"
1L
1?#
1g#
b10 &$
b0 \"
b1 @#
b1 i#
15
#32
05
#33
b1111110110 x#
1u#
b1011 R
b1011 #$
1Q#
1U#
b0 _#
b0 k#
b0 q#
b111 `#
b111 l#
b111 p#
b100 5#
b100 B#
b100 H#
b10 L#
b10 Y#
b10 ]#
b0 V#
b110 R"
b110 ^"
b110 d"
b110 S"
b110 _"
b110 c"
b110 2$
b0 C
b0 N#
b0 [#
b0 A$
b0 ?
b0 V"
b0 `"
b0 C$
0I#
1g#
0?#
1Z"
1L
b0 >
b0 ($
b0 B$
b1 i#
b10 @#
b0 \"
b1 '$
15
#34
05
#35
b101101011010 ?
b101101011010 V"
b101101011010 `"
b101101011010 C$
b101101011010 D
b101101011010 8#
b101101011010 E#
b101101011010 @$
13#
b100 >
b100 ($
b100 B$
b111 2$
b0 '$
b0 &$
b111 S"
b111 _"
b111 c"
b111 R"
b111 ^"
b111 d"
b101 5#
b101 B#
b101 H#
b0 `#
b0 l#
b0 p#
b1 _#
b1 k#
b1 q#
b0 Z
b0 k"
b0 v"
b0 5$
04#
b0 B
b0 b#
b0 n#
b0 +$
b0 4$
b0 ;
b0 ,$
0=
1Z"
1L
b100 ]
b100 *$
1<#
1g#
b0 \"
b11 @#
b1 i#
15
#36
05
#37
14#
0f"
b101101011010 B
b101101011010 b#
b101101011010 n#
b101101011010 +$
b101101011010 4$
1>"
b100 ;
b100 ,$
1=
b1000 <
b1000 )$
b1101111101 S
b1101111101 C"
b1101111101 M"
b1101111101 =$
b0 ]
b0 *$
0<#
b1101111101 G
b1101111101 U"
b1101111101 a"
b1101111101 "$
b1101111101 9$
b10 _#
b10 k#
b10 q#
b11 6#
b11 C#
b11 G#
b10 @#
b0 R"
b0 ^"
b0 d"
b0 S"
b0 _"
b0 c"
b1000 2$
b101101011010 ?
b101101011010 V"
b101101011010 `"
b101101011010 C$
0g#
1Z"
1L
b100 >
b100 ($
b100 B$
b10 i#
b0 \"
b1 &$
15
#38
05
#39
b1000 <
b1000 )$
b111100000100 S
b111100000100 C"
b111100000100 M"
b111100000100 =$
b111100000100 G
b111100000100 U"
b111100000100 a"
b111100000100 "$
b111100000100 9$
b1001 2$
b1 ?"
b1 K"
b1 Q"
b1 S"
b1 _"
b1 c"
b1 R"
b1 ^"
b1 d"
b100 6#
b100 C#
b100 G#
b110 5#
b110 B#
b110 H#
b1 `#
b1 l#
b1 p#
b11 _#
b11 k#
b11 q#
b0 D
b0 8#
b0 E#
b0 @$
b0 ?
b0 V"
b0 `"
b0 C$
03#
b111110110 x#
b0 >
b0 ($
b0 B$
1H"
0M
1Z"
1L
b10 &$
b1 I"
b0 \"
b10 @#
b10 i#
15
#40
05
#41
b101101011010 ?
b101101011010 V"
b101101011010 `"
b101101011010 C$
0>"
b101101011010 D
b101101011010 8#
b101101011010 E#
b101101011010 @$
b0 <
b0 )$
13#
b0 G
b0 U"
b0 a"
b0 "$
b0 9$
b100 >
b100 ($
b100 B$
b100 _#
b100 k#
b100 q#
b10 `#
b10 l#
b10 p#
b111 5#
b111 B#
b111 H#
b10 R"
b10 ^"
b10 d"
b10 S"
b10 _"
b10 c"
b10 ?"
b10 K"
b10 Q"
b0 &$
b1010 2$
04#
b0 B
b0 b#
b0 n#
b0 +$
b0 4$
b0 ;
b0 ,$
0=
b100 ]
b100 *$
1<#
1Z"
1L
0H"
b10 i#
b11 @#
b0 \"
b10 I"
15
#42
05
#43
14#
1*"
0f"
b101101011010 B
b101101011010 b#
b101101011010 n#
b101101011010 +$
b101101011010 4$
b100 <
b100 )$
b101010101110 T
b101010101110 /"
b101010101110 9"
b101010101110 <$
b100 ;
b100 ,$
1=
b101010101110 G
b101010101110 U"
b101010101110 a"
b101010101110 "$
b101010101110 9$
b0 ]
b0 *$
0<#
b1011 2$
b11 S"
b11 _"
b11 c"
b11 R"
b11 ^"
b11 d"
b10 @#
b101 6#
b101 C#
b101 G#
b101 _#
b101 k#
b101 q#
b101101011010 ?
b101101011010 V"
b101101011010 `"
b101101011010 C$
b100 >
b100 ($
b100 B$
1Z"
1L
1h#
b1 &$
b0 \"
b11 i#
15
#44
05
#45
1>"
0*"
b1000 <
b1000 )$
b101101011010 S
b101101011010 C"
b101101011010 M"
b101101011010 =$
b101101011010 G
b101101011010 U"
b101101011010 a"
b101101011010 "$
b101101011010 9$
b1101111101 /
b1101111101 H
b1101111101 B"
b1101111101 N"
b1101111101 H$
b101010101110 0
b101010101110 I
b101010101110 ."
b101010101110 :"
b101010101110 G$
b110 _#
b110 k#
b110 q#
b11 `#
b11 l#
b11 p#
b0 5#
b0 B#
b0 H#
b110 6#
b110 C#
b110 G#
b100 R"
b100 ^"
b100 d"
b100 S"
b100 _"
b100 c"
b1 +"
b1 7"
b1 ="
b1100 2$
1)
1*
1+
1,
b0 D
b0 8#
b0 E#
b0 @$
b11110110 x#
b0 ?
b0 V"
b0 `"
b0 C$
03#
1h#
1Z"
1L
14"
0N
b0 >
b0 ($
b0 B$
b11 i#
b10 @#
b0 \"
b1 5"
b10 &$
15
#46
05
#47
1*"
0>"
b100110110 x#
b100 <
b100 )$
b111010010101 T
b111010010101 /"
b111010010101 9"
b111010010101 <$
b111100000100 /
b111100000100 H
b111100000100 B"
b111100000100 N"
b111100000100 H$
1N
14"
b0 0
b0 I
b0 ."
b0 :"
b0 G$
1{
0~
0O
b11 ^
b11 !$
1g
0j
0P
b111010010101 G
b111010010101 U"
b111010010101 a"
b111010010101 "$
b111010010101 9$
b1101 2$
b1 1$
b1 0$
b1 /$
b1 .$
b0 &$
b1 @"
b1 L"
b1 P"
b11 ?"
b11 K"
b11 Q"
b0 5"
b1 ,"
b1 8"
b1 <"
b111 !"
b1 v
b1 $"
b1 ("
b111 k
b1 b
b1 n
b1 r
b101 S"
b101 _"
b101 c"
b101 R"
b101 ^"
b101 d"
b1 5#
b1 B#
b1 H#
b100 `#
b100 l#
b100 p#
b111 _#
b111 k#
b111 q#
04#
b0 B
b0 b#
b0 n#
b0 +$
b0 4$
b0 ;
b0 ,$
0=
1Z"
1L
b100 ]
b100 *$
1<#
1h#
b10 I"
b0 \"
b11 @#
b11 i#
15
#48
05
#49
0*"
b0 <
b0 )$
b0 G
b0 U"
b0 a"
b0 "$
b0 9$
1g
b11 ^
b11 !$
1{
b101101011010 /
b101101011010 H
b101101011010 B"
b101101011010 N"
b101101011010 H$
1H"
b0 _#
b0 k#
b0 q#
b110 R"
b110 ^"
b110 d"
b110 S"
b110 _"
b110 c"
b10 b
b10 n
b10 r
b110 k
b10 v
b10 $"
b10 ("
b110 !"
b10 +"
b10 7"
b10 ="
b10 ,"
b10 8"
b10 <"
b10 @"
b10 L"
b10 P"
b1 I"
b1110 2$
b10 1$
b10 0$
b10 /$
b10 .$
1h#
1Z"
1L
14"
1N
b100 i#
b0 \"
b0 5"
15
#50
05
#51
1>"
b1000110110 x#
b1000 <
b1000 )$
1M
1H"
b0 /
b0 H
b0 B"
b0 N"
b0 H$
11"
04"
0N
1{
b111 ^
b111 !$
1g
b101101011010 G
b101101011010 U"
b101101011010 a"
b101101011010 "$
b101101011010 9$
b1111 2$
b11 1$
b11 0$
b11 /$
b11 .$
b0 I"
b11 @"
b11 L"
b11 P"
b111 5"
b11 ,"
b11 8"
b11 <"
b101 !"
b11 v
b11 $"
b11 ("
b101 k
b11 b
b11 n
b11 r
b111 S"
b111 _"
b111 c"
b111 R"
b111 ^"
b111 d"
b1 _#
b1 k#
b1 q#
1Z"
1L
1h#
b0 \"
b101 i#
15
#52
05
#53
b1000 <
b1000 )$
1g
1{
b111 ^
b111 !$
11"
b10 _#
b10 k#
b10 q#
b0 R"
b0 ^"
b0 d"
b0 S"
b0 _"
b0 c"
b100 b
b100 n
b100 r
b100 k
b100 v
b100 $"
b100 ("
b100 !"
b100 ,"
b100 8"
b100 <"
b110 5"
b100 ?"
b100 K"
b100 Q"
b100 @"
b100 L"
b100 P"
b10000 2$
b100 1$
b100 0$
b100 /$
b100 .$
1h#
1Z"
1L
1H"
1M
b110 i#
b0 \"
b0 I"
15
#54
05
#55
0>"
b0 <
b0 )$
11"
1{
b111 ^
b111 !$
1g
b0 G
b0 U"
b0 a"
b0 "$
b0 9$
b10001 2$
b101 1$
b101 0$
b101 /$
b101 .$
b101 @"
b101 L"
b101 P"
b101 ?"
b101 K"
b101 Q"
b101 5"
b101 ,"
b101 8"
b101 <"
b11 !"
b101 v
b101 $"
b101 ("
b11 k
b101 b
b101 n
b101 r
b1 S"
b1 _"
b1 c"
b1 R"
b1 ^"
b1 d"
b11 _#
b11 k#
b11 q#
1H"
1M
1Z"
1L
1h#
b0 I"
b0 \"
b111 i#
15
#56
05
#57
1>"
b1000 <
b1000 )$
b101101011010 G
b101101011010 U"
b101101011010 a"
b101101011010 "$
b101101011010 9$
0g
0{
11"
b1100 ^
b1100 !$
1E"
0H"
0M
b100 _#
b100 k#
b100 q#
b10 R"
b10 ^"
b10 d"
b10 S"
b10 _"
b10 c"
b110 b
b110 n
b110 r
b10 k
b110 v
b110 $"
b110 ("
b10 !"
b110 ,"
b110 8"
b110 <"
b100 5"
b110 @"
b110 L"
b110 P"
b111 I"
b10010 2$
b110 1$
b110 0$
b110 /$
b110 .$
b110111 x#
1Q
1g#
0h#
1Z"
1L
b0 i#
b0 \"
15
#58
05
#59
11"
1~
1j
b10011 2$
b111 1$
b111 0$
b111 /$
b111 .$
b111 @"
b111 L"
b111 P"
b110 ?"
b110 K"
b110 Q"
b11 5"
b111 ,"
b111 8"
b111 <"
b1 !"
b111 v
b111 $"
b111 ("
b1 k
b111 b
b111 n
b111 r
b11 S"
b11 _"
b11 c"
b11 R"
b11 ^"
b11 d"
b101 _#
b101 k#
b101 q#
b1000 <
b1000 )$
b110110 x#
b1100 ^
b1100 !$
1E"
1Z"
1L
1g#
0Q
b111 I"
b0 \"
b1 i#
15
#60
05
#61
0>"
b11110110 x#
b0 G
b0 U"
b0 a"
b0 "$
b0 9$
1P
1j
1O
1~
b101010101110 0
b101010101110 I
b101010101110 ."
b101010101110 :"
b101010101110 G$
01"
b1101111101 /
b1101111101 H
b1101111101 B"
b1101111101 N"
b1101111101 H$
b110 _#
b110 k#
b110 q#
b100 R"
b100 ^"
b100 d"
b100 S"
b100 _"
b100 c"
b0 b
b0 n
b0 r
b0 k
b0 v
b0 $"
b0 ("
b0 !"
b0 ,"
b0 8"
b0 <"
b10 5"
b111 ?"
b111 K"
b111 Q"
b0 @"
b0 L"
b0 P"
b10100 2$
b1000 1$
b1000 0$
b1000 /$
b1000 .$
b0 <
b0 )$
0g#
1Z"
1L
b1000 ^
b1000 !$
1E"
b10 i#
b0 \"
b111 I"
15
#62
05
#63
b110110 x#
1E"
b111100000100 /
b111100000100 H
b111100000100 B"
b111100000100 N"
b111100000100 H$
14"
b111010010101 0
b111010010101 I
b111010010101 ."
b111010010101 :"
b111010010101 G$
1{
0~
0O
b1011 ^
b1011 !$
1g
0j
0P
b10101 2$
b1001 1$
b1001 0$
b1001 /$
b1001 .$
b110 I"
b1 @"
b1 L"
b1 P"
b1 5"
b1 ,"
b1 8"
b1 <"
b111 !"
b1 v
b1 $"
b1 ("
b111 k
b1 b
b1 n
b1 r
b101 S"
b101 _"
b101 c"
b101 R"
b101 ^"
b101 d"
b111 _#
b111 k#
b111 q#
1Z"
1L
1h#
b0 \"
b11 i#
15
#64
05
#65
b100110110 x#
1g
1{
b0 0
b0 I
b0 ."
b0 :"
b0 G$
1N
14"
b101101011010 /
b101101011010 H
b101101011010 B"
b101101011010 N"
b101101011010 H$
b1011 ^
b1011 !$
1E"
b0 _#
b0 k#
b0 q#
b110 R"
b110 ^"
b110 d"
b110 S"
b110 _"
b110 c"
b10 b
b10 n
b10 r
b110 k
b10 v
b10 $"
b10 ("
b110 !"
b10 ,"
b10 8"
b10 <"
b0 5"
b10 @"
b10 L"
b10 P"
b101 I"
b10110 2$
b1010 1$
b1010 0$
b1010 /$
b1010 .$
1h#
1Z"
1L
b100 i#
b0 \"
15
