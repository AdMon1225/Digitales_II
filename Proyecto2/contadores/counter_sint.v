/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* top =  1  *)
(* src = "counter_sint.v:1" *)
module counter_sint(clk, req, IDLE, reset_L, idx, fifo0_pop, fifo1_pop, fifo2_pop, fifo3_pop, fifo4_pop, valid_sint, data_out_sint);
  (* src = "counter_sint.v:36" *)
  wire [4:0] _000_;
  (* src = "counter_sint.v:36" *)
  wire [4:0] _001_;
  (* src = "counter_sint.v:36" *)
  wire [4:0] _002_;
  (* src = "counter_sint.v:36" *)
  wire [4:0] _003_;
  (* src = "counter_sint.v:36" *)
  wire [4:0] _004_;
  (* src = "counter_sint.v:84" *)
  wire [4:0] _005_;
  (* src = "counter_sint.v:36" *)
  wire _006_;
  (* src = "counter_sint.v:36" *)
  wire _007_;
  (* src = "counter_sint.v:36" *)
  wire _008_;
  (* src = "counter_sint.v:36" *)
  wire _009_;
  (* src = "counter_sint.v:36" *)
  wire _010_;
  (* src = "counter_sint.v:36" *)
  wire _011_;
  (* src = "counter_sint.v:36" *)
  wire _012_;
  (* src = "counter_sint.v:36" *)
  wire _013_;
  (* src = "counter_sint.v:36" *)
  wire _014_;
  (* src = "counter_sint.v:36" *)
  wire _015_;
  (* src = "counter_sint.v:36" *)
  wire _016_;
  (* src = "counter_sint.v:36" *)
  wire _017_;
  (* src = "counter_sint.v:36" *)
  wire _018_;
  (* src = "counter_sint.v:36" *)
  wire _019_;
  (* src = "counter_sint.v:36" *)
  wire _020_;
  (* src = "counter_sint.v:36" *)
  wire _021_;
  (* src = "counter_sint.v:36" *)
  wire _022_;
  (* src = "counter_sint.v:36" *)
  wire _023_;
  (* src = "counter_sint.v:36" *)
  wire _024_;
  (* src = "counter_sint.v:36" *)
  wire _025_;
  (* src = "counter_sint.v:36" *)
  wire _026_;
  (* src = "counter_sint.v:36" *)
  wire _027_;
  (* src = "counter_sint.v:36" *)
  wire _028_;
  (* src = "counter_sint.v:36" *)
  wire _029_;
  (* src = "counter_sint.v:36" *)
  wire _030_;
  (* src = "counter_sint.v:7" *)
  wire _031_;
  (* src = "counter_sint.v:28" *)
  wire _032_;
  (* src = "counter_sint.v:28" *)
  wire _033_;
  (* src = "counter_sint.v:28" *)
  wire _034_;
  (* src = "counter_sint.v:28" *)
  wire _035_;
  (* src = "counter_sint.v:28" *)
  wire _036_;
  (* src = "counter_sint.v:29" *)
  wire _037_;
  (* src = "counter_sint.v:29" *)
  wire _038_;
  (* src = "counter_sint.v:29" *)
  wire _039_;
  (* src = "counter_sint.v:29" *)
  wire _040_;
  (* src = "counter_sint.v:29" *)
  wire _041_;
  (* src = "counter_sint.v:30" *)
  wire _042_;
  (* src = "counter_sint.v:30" *)
  wire _043_;
  (* src = "counter_sint.v:30" *)
  wire _044_;
  (* src = "counter_sint.v:30" *)
  wire _045_;
  (* src = "counter_sint.v:30" *)
  wire _046_;
  (* src = "counter_sint.v:31" *)
  wire _047_;
  (* src = "counter_sint.v:31" *)
  wire _048_;
  (* src = "counter_sint.v:31" *)
  wire _049_;
  (* src = "counter_sint.v:31" *)
  wire _050_;
  (* src = "counter_sint.v:31" *)
  wire _051_;
  (* src = "counter_sint.v:32" *)
  wire _052_;
  (* src = "counter_sint.v:32" *)
  wire _053_;
  (* src = "counter_sint.v:32" *)
  wire _054_;
  (* src = "counter_sint.v:32" *)
  wire _055_;
  (* src = "counter_sint.v:32" *)
  wire _056_;
  (* src = "counter_sint.v:22" *)
  wire _057_;
  (* src = "counter_sint.v:22" *)
  wire _058_;
  (* src = "counter_sint.v:22" *)
  wire _059_;
  (* src = "counter_sint.v:22" *)
  wire _060_;
  (* src = "counter_sint.v:22" *)
  wire _061_;
  (* src = "counter_sint.v:13" *)
  wire _062_;
  (* src = "counter_sint.v:14" *)
  wire _063_;
  (* src = "counter_sint.v:15" *)
  wire _064_;
  (* src = "counter_sint.v:16" *)
  wire _065_;
  (* src = "counter_sint.v:17" *)
  wire _066_;
  (* src = "counter_sint.v:9" *)
  wire _067_;
  (* src = "counter_sint.v:9" *)
  wire _068_;
  (* src = "counter_sint.v:9" *)
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  (* src = "counter_sint.v:6" *)
  wire _260_;
  (* src = "counter_sint.v:8" *)
  wire _261_;
  (* src = "counter_sint.v:21" *)
  wire _262_;
  (* src = "counter_sint.v:52" *)
  (* unused_bits = "5" *)
  wire [31:0] _263_;
  (* src = "counter_sint.v:57" *)
  (* unused_bits = "5" *)
  wire [31:0] _264_;
  (* src = "counter_sint.v:62" *)
  (* unused_bits = "5" *)
  wire [31:0] _265_;
  (* src = "counter_sint.v:67" *)
  (* unused_bits = "5" *)
  wire [31:0] _266_;
  (* src = "counter_sint.v:72" *)
  (* unused_bits = "5" *)
  wire [31:0] _267_;
  wire _268_;
  wire _269_;
  wire _270_;
  wire _271_;
  wire [1:0] _272_;
  wire _273_;
  wire [1:0] _274_;
  wire _275_;
  wire [1:0] _276_;
  wire _277_;
  wire [1:0] _278_;
  wire _279_;
  wire [1:0] _280_;
  wire _281_;
  wire [1:0] _282_;
  wire _283_;
  wire _284_;
  wire [2:0] _285_;
  wire [2:0] _286_;
  wire _287_;
  wire _288_;
  wire _289_;
  wire _290_;
  (* src = "counter_sint.v:113|counter_cond.v:91|<techmap.v>:432" *)
  wire [24:0] _291_;
  (* src = "counter_sint.v:113|counter_cond.v:91|<techmap.v>:428" *)
  wire [4:0] _292_;
  wire _293_;
  wire _294_;
  wire _295_;
  wire _296_;
  wire _297_;
  wire [4:0] _298_;
  wire [4:0] _299_;
  wire [4:0] _300_;
  wire [4:0] _301_;
  wire [4:0] _302_;
  (* src = "counter_sint.v:52|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "4" *)
  wire [31:0] _303_;
  (* src = "counter_sint.v:57|counter_cond.v:52|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "4" *)
  wire [31:0] _304_;
  (* src = "counter_sint.v:62|counter_cond.v:52|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "4" *)
  wire [31:0] _305_;
  (* src = "counter_sint.v:67|counter_cond.v:52|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "4" *)
  wire [31:0] _306_;
  (* src = "counter_sint.v:72|counter_cond.v:52|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "4" *)
  wire [31:0] _307_;
  (* src = "counter_sint.v:113|counter_cond.v:91|<techmap.v>:445" *)
  wire _308_;
  (* src = "counter_sint.v:52|<techmap.v>:260|<techmap.v>:222" *)
  wire _309_;
  (* src = "counter_sint.v:57|counter_cond.v:52|<techmap.v>:260|<techmap.v>:222" *)
  wire _310_;
  (* src = "counter_sint.v:62|counter_cond.v:52|<techmap.v>:260|<techmap.v>:222" *)
  wire _311_;
  (* src = "counter_sint.v:67|counter_cond.v:52|<techmap.v>:260|<techmap.v>:222" *)
  wire _312_;
  (* src = "counter_sint.v:72|counter_cond.v:52|<techmap.v>:260|<techmap.v>:222" *)
  wire _313_;
  (* src = "counter_sint.v:7" *)
  input IDLE;
  (* src = "counter_sint.v:5" *)
  input clk;
  (* src = "counter_sint.v:28" *)
  wire [4:0] counter0;
  (* src = "counter_sint.v:29" *)
  wire [4:0] counter1;
  (* src = "counter_sint.v:30" *)
  wire [4:0] counter2;
  (* src = "counter_sint.v:31" *)
  wire [4:0] counter3;
  (* src = "counter_sint.v:32" *)
  wire [4:0] counter4;
  (* src = "counter_sint.v:22" *)
  output [4:0] data_out_sint;
  (* src = "counter_sint.v:13" *)
  input fifo0_pop;
  (* src = "counter_sint.v:14" *)
  input fifo1_pop;
  (* src = "counter_sint.v:15" *)
  input fifo2_pop;
  (* src = "counter_sint.v:16" *)
  input fifo3_pop;
  (* src = "counter_sint.v:17" *)
  input fifo4_pop;
  (* src = "counter_sint.v:9" *)
  input [2:0] idx;
  (* src = "counter_sint.v:6" *)
  input req;
  (* src = "counter_sint.v:8" *)
  input reset_L;
  (* src = "counter_sint.v:21" *)
  output valid_sint;
  NOT _314_ (
    .A(_069_),
    .Y(_229_)
  );
  NOT _315_ (
    .A(_067_),
    .Y(_230_)
  );
  NOT _316_ (
    .A(_068_),
    .Y(_231_)
  );
  NOT _317_ (
    .A(_052_),
    .Y(_232_)
  );
  NOT _318_ (
    .A(_066_),
    .Y(_233_)
  );
  NOT _319_ (
    .A(_053_),
    .Y(_234_)
  );
  NOT _320_ (
    .A(_054_),
    .Y(_235_)
  );
  NOT _321_ (
    .A(_056_),
    .Y(_236_)
  );
  NOT _322_ (
    .A(_047_),
    .Y(_237_)
  );
  NOT _323_ (
    .A(_065_),
    .Y(_238_)
  );
  NOT _324_ (
    .A(_048_),
    .Y(_239_)
  );
  NOT _325_ (
    .A(_049_),
    .Y(_240_)
  );
  NOT _326_ (
    .A(_050_),
    .Y(_241_)
  );
  NOT _327_ (
    .A(_051_),
    .Y(_242_)
  );
  NOT _328_ (
    .A(_042_),
    .Y(_243_)
  );
  NOT _329_ (
    .A(_064_),
    .Y(_244_)
  );
  NOT _330_ (
    .A(_043_),
    .Y(_245_)
  );
  NOT _331_ (
    .A(_044_),
    .Y(_246_)
  );
  NOT _332_ (
    .A(_046_),
    .Y(_247_)
  );
  NOT _333_ (
    .A(_037_),
    .Y(_248_)
  );
  NOT _334_ (
    .A(_063_),
    .Y(_249_)
  );
  NOT _335_ (
    .A(_038_),
    .Y(_250_)
  );
  NOT _336_ (
    .A(_039_),
    .Y(_251_)
  );
  NOT _337_ (
    .A(_040_),
    .Y(_252_)
  );
  NOT _338_ (
    .A(_041_),
    .Y(_253_)
  );
  NOT _339_ (
    .A(_032_),
    .Y(_254_)
  );
  NOT _340_ (
    .A(_062_),
    .Y(_255_)
  );
  NOT _341_ (
    .A(_033_),
    .Y(_256_)
  );
  NOT _342_ (
    .A(_034_),
    .Y(_257_)
  );
  NOT _343_ (
    .A(_036_),
    .Y(_258_)
  );
  NAND _344_ (
    .A(_031_),
    .B(_260_),
    .Y(_259_)
  );
  NOT _345_ (
    .A(_259_),
    .Y(_262_)
  );
  NOR _346_ (
    .A(_069_),
    .B(_230_),
    .Y(_070_)
  );
  NAND _347_ (
    .A(_229_),
    .B(_067_),
    .Y(_071_)
  );
  NAND _348_ (
    .A(_231_),
    .B(_070_),
    .Y(_072_)
  );
  NOT _349_ (
    .A(_072_),
    .Y(_073_)
  );
  NAND _350_ (
    .A(_037_),
    .B(_073_),
    .Y(_074_)
  );
  NAND _351_ (
    .A(_069_),
    .B(_230_),
    .Y(_075_)
  );
  NOR _352_ (
    .A(_068_),
    .B(_075_),
    .Y(_076_)
  );
  NAND _353_ (
    .A(_052_),
    .B(_076_),
    .Y(_077_)
  );
  NAND _354_ (
    .A(_074_),
    .B(_077_),
    .Y(_078_)
  );
  NOR _355_ (
    .A(_069_),
    .B(_067_),
    .Y(_079_)
  );
  NAND _356_ (
    .A(_229_),
    .B(_230_),
    .Y(_080_)
  );
  NOR _357_ (
    .A(_068_),
    .B(_080_),
    .Y(_081_)
  );
  NAND _358_ (
    .A(_231_),
    .B(_079_),
    .Y(_082_)
  );
  NAND _359_ (
    .A(_032_),
    .B(_081_),
    .Y(_083_)
  );
  NOR _360_ (
    .A(_231_),
    .B(_071_),
    .Y(_084_)
  );
  NAND _361_ (
    .A(_068_),
    .B(_070_),
    .Y(_085_)
  );
  NOR _362_ (
    .A(_237_),
    .B(_085_),
    .Y(_086_)
  );
  NOR _363_ (
    .A(_231_),
    .B(_080_),
    .Y(_087_)
  );
  NAND _364_ (
    .A(_068_),
    .B(_079_),
    .Y(_088_)
  );
  NOR _365_ (
    .A(_243_),
    .B(_088_),
    .Y(_089_)
  );
  NOR _366_ (
    .A(_086_),
    .B(_089_),
    .Y(_090_)
  );
  NAND _367_ (
    .A(_083_),
    .B(_090_),
    .Y(_091_)
  );
  NOR _368_ (
    .A(_078_),
    .B(_091_),
    .Y(_092_)
  );
  NOR _369_ (
    .A(_259_),
    .B(_092_),
    .Y(_057_)
  );
  NAND _370_ (
    .A(_043_),
    .B(_087_),
    .Y(_093_)
  );
  NAND _371_ (
    .A(_053_),
    .B(_076_),
    .Y(_094_)
  );
  NAND _372_ (
    .A(_093_),
    .B(_094_),
    .Y(_095_)
  );
  NAND _373_ (
    .A(_033_),
    .B(_081_),
    .Y(_096_)
  );
  NOR _374_ (
    .A(_239_),
    .B(_085_),
    .Y(_097_)
  );
  NOR _375_ (
    .A(_250_),
    .B(_072_),
    .Y(_098_)
  );
  NOR _376_ (
    .A(_097_),
    .B(_098_),
    .Y(_099_)
  );
  NAND _377_ (
    .A(_096_),
    .B(_099_),
    .Y(_100_)
  );
  NOR _378_ (
    .A(_095_),
    .B(_100_),
    .Y(_101_)
  );
  NOR _379_ (
    .A(_259_),
    .B(_101_),
    .Y(_058_)
  );
  NAND _380_ (
    .A(_044_),
    .B(_087_),
    .Y(_102_)
  );
  NAND _381_ (
    .A(_054_),
    .B(_076_),
    .Y(_103_)
  );
  NAND _382_ (
    .A(_102_),
    .B(_103_),
    .Y(_104_)
  );
  NAND _383_ (
    .A(_049_),
    .B(_084_),
    .Y(_105_)
  );
  NOR _384_ (
    .A(_257_),
    .B(_082_),
    .Y(_106_)
  );
  NOR _385_ (
    .A(_251_),
    .B(_072_),
    .Y(_107_)
  );
  NOR _386_ (
    .A(_106_),
    .B(_107_),
    .Y(_108_)
  );
  NAND _387_ (
    .A(_105_),
    .B(_108_),
    .Y(_109_)
  );
  NOR _388_ (
    .A(_104_),
    .B(_109_),
    .Y(_110_)
  );
  NOR _389_ (
    .A(_259_),
    .B(_110_),
    .Y(_059_)
  );
  NAND _390_ (
    .A(_045_),
    .B(_087_),
    .Y(_111_)
  );
  NAND _391_ (
    .A(_055_),
    .B(_076_),
    .Y(_112_)
  );
  NAND _392_ (
    .A(_111_),
    .B(_112_),
    .Y(_113_)
  );
  NAND _393_ (
    .A(_035_),
    .B(_081_),
    .Y(_114_)
  );
  NOR _394_ (
    .A(_241_),
    .B(_085_),
    .Y(_115_)
  );
  NOR _395_ (
    .A(_252_),
    .B(_072_),
    .Y(_116_)
  );
  NOR _396_ (
    .A(_115_),
    .B(_116_),
    .Y(_117_)
  );
  NAND _397_ (
    .A(_114_),
    .B(_117_),
    .Y(_118_)
  );
  NOR _398_ (
    .A(_113_),
    .B(_118_),
    .Y(_119_)
  );
  NOR _399_ (
    .A(_259_),
    .B(_119_),
    .Y(_060_)
  );
  NAND _400_ (
    .A(_046_),
    .B(_087_),
    .Y(_120_)
  );
  NAND _401_ (
    .A(_056_),
    .B(_076_),
    .Y(_121_)
  );
  NAND _402_ (
    .A(_120_),
    .B(_121_),
    .Y(_122_)
  );
  NAND _403_ (
    .A(_051_),
    .B(_084_),
    .Y(_123_)
  );
  NOR _404_ (
    .A(_258_),
    .B(_082_),
    .Y(_124_)
  );
  NOR _405_ (
    .A(_253_),
    .B(_072_),
    .Y(_125_)
  );
  NOR _406_ (
    .A(_124_),
    .B(_125_),
    .Y(_126_)
  );
  NAND _407_ (
    .A(_123_),
    .B(_126_),
    .Y(_127_)
  );
  NOR _408_ (
    .A(_122_),
    .B(_127_),
    .Y(_128_)
  );
  NOR _409_ (
    .A(_259_),
    .B(_128_),
    .Y(_061_)
  );
  NOR _410_ (
    .A(_232_),
    .B(_233_),
    .Y(_129_)
  );
  NAND _411_ (
    .A(_052_),
    .B(_066_),
    .Y(_130_)
  );
  NOR _412_ (
    .A(_052_),
    .B(_066_),
    .Y(_131_)
  );
  NOT _413_ (
    .A(_131_),
    .Y(_132_)
  );
  NAND _414_ (
    .A(_261_),
    .B(_132_),
    .Y(_133_)
  );
  NOR _415_ (
    .A(_129_),
    .B(_133_),
    .Y(_026_)
  );
  NOR _416_ (
    .A(_234_),
    .B(_130_),
    .Y(_134_)
  );
  NAND _417_ (
    .A(_053_),
    .B(_129_),
    .Y(_135_)
  );
  NAND _418_ (
    .A(_234_),
    .B(_130_),
    .Y(_136_)
  );
  NAND _419_ (
    .A(_261_),
    .B(_136_),
    .Y(_137_)
  );
  NOR _420_ (
    .A(_134_),
    .B(_137_),
    .Y(_027_)
  );
  NOR _421_ (
    .A(_235_),
    .B(_135_),
    .Y(_138_)
  );
  NAND _422_ (
    .A(_235_),
    .B(_135_),
    .Y(_139_)
  );
  NAND _423_ (
    .A(_261_),
    .B(_139_),
    .Y(_140_)
  );
  NOR _424_ (
    .A(_138_),
    .B(_140_),
    .Y(_028_)
  );
  NAND _425_ (
    .A(_055_),
    .B(_138_),
    .Y(_141_)
  );
  NOT _426_ (
    .A(_141_),
    .Y(_142_)
  );
  NOR _427_ (
    .A(_055_),
    .B(_138_),
    .Y(_143_)
  );
  NOT _428_ (
    .A(_143_),
    .Y(_144_)
  );
  NAND _429_ (
    .A(_261_),
    .B(_144_),
    .Y(_145_)
  );
  NOR _430_ (
    .A(_142_),
    .B(_145_),
    .Y(_029_)
  );
  NOR _431_ (
    .A(_236_),
    .B(_141_),
    .Y(_146_)
  );
  NAND _432_ (
    .A(_236_),
    .B(_141_),
    .Y(_147_)
  );
  NAND _433_ (
    .A(_261_),
    .B(_147_),
    .Y(_148_)
  );
  NOR _434_ (
    .A(_146_),
    .B(_148_),
    .Y(_030_)
  );
  NOR _435_ (
    .A(_237_),
    .B(_238_),
    .Y(_149_)
  );
  NAND _436_ (
    .A(_047_),
    .B(_065_),
    .Y(_150_)
  );
  NOR _437_ (
    .A(_047_),
    .B(_065_),
    .Y(_151_)
  );
  NOT _438_ (
    .A(_151_),
    .Y(_152_)
  );
  NAND _439_ (
    .A(_261_),
    .B(_152_),
    .Y(_153_)
  );
  NOR _440_ (
    .A(_149_),
    .B(_153_),
    .Y(_021_)
  );
  NOR _441_ (
    .A(_239_),
    .B(_150_),
    .Y(_154_)
  );
  NAND _442_ (
    .A(_048_),
    .B(_149_),
    .Y(_155_)
  );
  NAND _443_ (
    .A(_239_),
    .B(_150_),
    .Y(_156_)
  );
  NAND _444_ (
    .A(_261_),
    .B(_156_),
    .Y(_157_)
  );
  NOR _445_ (
    .A(_154_),
    .B(_157_),
    .Y(_022_)
  );
  NOR _446_ (
    .A(_240_),
    .B(_155_),
    .Y(_158_)
  );
  NAND _447_ (
    .A(_240_),
    .B(_155_),
    .Y(_159_)
  );
  NAND _448_ (
    .A(_261_),
    .B(_159_),
    .Y(_160_)
  );
  NOR _449_ (
    .A(_158_),
    .B(_160_),
    .Y(_023_)
  );
  NAND _450_ (
    .A(_050_),
    .B(_158_),
    .Y(_161_)
  );
  NOT _451_ (
    .A(_161_),
    .Y(_162_)
  );
  NOR _452_ (
    .A(_050_),
    .B(_158_),
    .Y(_163_)
  );
  NOT _453_ (
    .A(_163_),
    .Y(_164_)
  );
  NAND _454_ (
    .A(_261_),
    .B(_164_),
    .Y(_165_)
  );
  NOR _455_ (
    .A(_162_),
    .B(_165_),
    .Y(_024_)
  );
  NOR _456_ (
    .A(_242_),
    .B(_161_),
    .Y(_166_)
  );
  NAND _457_ (
    .A(_242_),
    .B(_161_),
    .Y(_167_)
  );
  NAND _458_ (
    .A(_261_),
    .B(_167_),
    .Y(_168_)
  );
  NOR _459_ (
    .A(_166_),
    .B(_168_),
    .Y(_025_)
  );
  NOR _460_ (
    .A(_243_),
    .B(_244_),
    .Y(_169_)
  );
  NAND _461_ (
    .A(_042_),
    .B(_064_),
    .Y(_170_)
  );
  NOR _462_ (
    .A(_042_),
    .B(_064_),
    .Y(_171_)
  );
  NOT _463_ (
    .A(_171_),
    .Y(_172_)
  );
  NAND _464_ (
    .A(_261_),
    .B(_172_),
    .Y(_173_)
  );
  NOR _465_ (
    .A(_169_),
    .B(_173_),
    .Y(_016_)
  );
  NOR _466_ (
    .A(_245_),
    .B(_170_),
    .Y(_174_)
  );
  NAND _467_ (
    .A(_043_),
    .B(_169_),
    .Y(_175_)
  );
  NAND _468_ (
    .A(_245_),
    .B(_170_),
    .Y(_176_)
  );
  NAND _469_ (
    .A(_261_),
    .B(_176_),
    .Y(_177_)
  );
  NOR _470_ (
    .A(_174_),
    .B(_177_),
    .Y(_017_)
  );
  NOR _471_ (
    .A(_246_),
    .B(_175_),
    .Y(_178_)
  );
  NAND _472_ (
    .A(_246_),
    .B(_175_),
    .Y(_179_)
  );
  NAND _473_ (
    .A(_261_),
    .B(_179_),
    .Y(_180_)
  );
  NOR _474_ (
    .A(_178_),
    .B(_180_),
    .Y(_018_)
  );
  NAND _475_ (
    .A(_045_),
    .B(_178_),
    .Y(_181_)
  );
  NOT _476_ (
    .A(_181_),
    .Y(_182_)
  );
  NOR _477_ (
    .A(_045_),
    .B(_178_),
    .Y(_183_)
  );
  NOT _478_ (
    .A(_183_),
    .Y(_184_)
  );
  NAND _479_ (
    .A(_261_),
    .B(_184_),
    .Y(_185_)
  );
  NOR _480_ (
    .A(_182_),
    .B(_185_),
    .Y(_019_)
  );
  NOR _481_ (
    .A(_247_),
    .B(_181_),
    .Y(_186_)
  );
  NAND _482_ (
    .A(_247_),
    .B(_181_),
    .Y(_187_)
  );
  NAND _483_ (
    .A(_261_),
    .B(_187_),
    .Y(_188_)
  );
  NOR _484_ (
    .A(_186_),
    .B(_188_),
    .Y(_020_)
  );
  NOR _485_ (
    .A(_248_),
    .B(_249_),
    .Y(_189_)
  );
  NAND _486_ (
    .A(_037_),
    .B(_063_),
    .Y(_190_)
  );
  NOR _487_ (
    .A(_037_),
    .B(_063_),
    .Y(_191_)
  );
  NOT _488_ (
    .A(_191_),
    .Y(_192_)
  );
  NAND _489_ (
    .A(_261_),
    .B(_192_),
    .Y(_193_)
  );
  NOR _490_ (
    .A(_189_),
    .B(_193_),
    .Y(_011_)
  );
  NOR _491_ (
    .A(_250_),
    .B(_190_),
    .Y(_194_)
  );
  NAND _492_ (
    .A(_038_),
    .B(_189_),
    .Y(_195_)
  );
  NAND _493_ (
    .A(_250_),
    .B(_190_),
    .Y(_196_)
  );
  NAND _494_ (
    .A(_261_),
    .B(_196_),
    .Y(_197_)
  );
  NOR _495_ (
    .A(_194_),
    .B(_197_),
    .Y(_012_)
  );
  NOR _496_ (
    .A(_251_),
    .B(_195_),
    .Y(_198_)
  );
  NAND _497_ (
    .A(_251_),
    .B(_195_),
    .Y(_199_)
  );
  NAND _498_ (
    .A(_261_),
    .B(_199_),
    .Y(_200_)
  );
  NOR _499_ (
    .A(_198_),
    .B(_200_),
    .Y(_013_)
  );
  NAND _500_ (
    .A(_040_),
    .B(_198_),
    .Y(_201_)
  );
  NOT _501_ (
    .A(_201_),
    .Y(_202_)
  );
  NOR _502_ (
    .A(_040_),
    .B(_198_),
    .Y(_203_)
  );
  NOT _503_ (
    .A(_203_),
    .Y(_204_)
  );
  NAND _504_ (
    .A(_261_),
    .B(_204_),
    .Y(_205_)
  );
  NOR _505_ (
    .A(_202_),
    .B(_205_),
    .Y(_014_)
  );
  NOR _506_ (
    .A(_253_),
    .B(_201_),
    .Y(_206_)
  );
  NAND _507_ (
    .A(_253_),
    .B(_201_),
    .Y(_207_)
  );
  NAND _508_ (
    .A(_261_),
    .B(_207_),
    .Y(_208_)
  );
  NOR _509_ (
    .A(_206_),
    .B(_208_),
    .Y(_015_)
  );
  NOR _510_ (
    .A(_254_),
    .B(_255_),
    .Y(_209_)
  );
  NAND _511_ (
    .A(_032_),
    .B(_062_),
    .Y(_210_)
  );
  NOR _512_ (
    .A(_032_),
    .B(_062_),
    .Y(_211_)
  );
  NOT _513_ (
    .A(_211_),
    .Y(_212_)
  );
  NAND _514_ (
    .A(_261_),
    .B(_212_),
    .Y(_213_)
  );
  NOR _515_ (
    .A(_209_),
    .B(_213_),
    .Y(_006_)
  );
  NOR _516_ (
    .A(_256_),
    .B(_210_),
    .Y(_214_)
  );
  NAND _517_ (
    .A(_033_),
    .B(_209_),
    .Y(_215_)
  );
  NAND _518_ (
    .A(_256_),
    .B(_210_),
    .Y(_216_)
  );
  NAND _519_ (
    .A(_261_),
    .B(_216_),
    .Y(_217_)
  );
  NOR _520_ (
    .A(_214_),
    .B(_217_),
    .Y(_007_)
  );
  NOR _521_ (
    .A(_257_),
    .B(_215_),
    .Y(_218_)
  );
  NAND _522_ (
    .A(_257_),
    .B(_215_),
    .Y(_219_)
  );
  NAND _523_ (
    .A(_261_),
    .B(_219_),
    .Y(_220_)
  );
  NOR _524_ (
    .A(_218_),
    .B(_220_),
    .Y(_008_)
  );
  NAND _525_ (
    .A(_035_),
    .B(_218_),
    .Y(_221_)
  );
  NOT _526_ (
    .A(_221_),
    .Y(_222_)
  );
  NOR _527_ (
    .A(_035_),
    .B(_218_),
    .Y(_223_)
  );
  NOT _528_ (
    .A(_223_),
    .Y(_224_)
  );
  NAND _529_ (
    .A(_261_),
    .B(_224_),
    .Y(_225_)
  );
  NOR _530_ (
    .A(_222_),
    .B(_225_),
    .Y(_009_)
  );
  NOR _531_ (
    .A(_258_),
    .B(_221_),
    .Y(_226_)
  );
  NAND _532_ (
    .A(_258_),
    .B(_221_),
    .Y(_227_)
  );
  NAND _533_ (
    .A(_261_),
    .B(_227_),
    .Y(_228_)
  );
  NOR _534_ (
    .A(_226_),
    .B(_228_),
    .Y(_010_)
  );
  (* src = "counter_sint.v:36" *)
  DFF _535_ (
    .C(clk),
    .D(_000_[0]),
    .Q(counter0[0])
  );
  (* src = "counter_sint.v:36" *)
  DFF _536_ (
    .C(clk),
    .D(_000_[1]),
    .Q(counter0[1])
  );
  (* src = "counter_sint.v:36" *)
  DFF _537_ (
    .C(clk),
    .D(_000_[2]),
    .Q(counter0[2])
  );
  (* src = "counter_sint.v:36" *)
  DFF _538_ (
    .C(clk),
    .D(_000_[3]),
    .Q(counter0[3])
  );
  (* src = "counter_sint.v:36" *)
  DFF _539_ (
    .C(clk),
    .D(_000_[4]),
    .Q(counter0[4])
  );
  (* src = "counter_sint.v:36" *)
  DFF _540_ (
    .C(clk),
    .D(_001_[0]),
    .Q(counter1[0])
  );
  (* src = "counter_sint.v:36" *)
  DFF _541_ (
    .C(clk),
    .D(_001_[1]),
    .Q(counter1[1])
  );
  (* src = "counter_sint.v:36" *)
  DFF _542_ (
    .C(clk),
    .D(_001_[2]),
    .Q(counter1[2])
  );
  (* src = "counter_sint.v:36" *)
  DFF _543_ (
    .C(clk),
    .D(_001_[3]),
    .Q(counter1[3])
  );
  (* src = "counter_sint.v:36" *)
  DFF _544_ (
    .C(clk),
    .D(_001_[4]),
    .Q(counter1[4])
  );
  (* src = "counter_sint.v:36" *)
  DFF _545_ (
    .C(clk),
    .D(_002_[0]),
    .Q(counter2[0])
  );
  (* src = "counter_sint.v:36" *)
  DFF _546_ (
    .C(clk),
    .D(_002_[1]),
    .Q(counter2[1])
  );
  (* src = "counter_sint.v:36" *)
  DFF _547_ (
    .C(clk),
    .D(_002_[2]),
    .Q(counter2[2])
  );
  (* src = "counter_sint.v:36" *)
  DFF _548_ (
    .C(clk),
    .D(_002_[3]),
    .Q(counter2[3])
  );
  (* src = "counter_sint.v:36" *)
  DFF _549_ (
    .C(clk),
    .D(_002_[4]),
    .Q(counter2[4])
  );
  (* src = "counter_sint.v:36" *)
  DFF _550_ (
    .C(clk),
    .D(_003_[0]),
    .Q(counter3[0])
  );
  (* src = "counter_sint.v:36" *)
  DFF _551_ (
    .C(clk),
    .D(_003_[1]),
    .Q(counter3[1])
  );
  (* src = "counter_sint.v:36" *)
  DFF _552_ (
    .C(clk),
    .D(_003_[2]),
    .Q(counter3[2])
  );
  (* src = "counter_sint.v:36" *)
  DFF _553_ (
    .C(clk),
    .D(_003_[3]),
    .Q(counter3[3])
  );
  (* src = "counter_sint.v:36" *)
  DFF _554_ (
    .C(clk),
    .D(_003_[4]),
    .Q(counter3[4])
  );
  (* src = "counter_sint.v:36" *)
  DFF _555_ (
    .C(clk),
    .D(_004_[0]),
    .Q(counter4[0])
  );
  (* src = "counter_sint.v:36" *)
  DFF _556_ (
    .C(clk),
    .D(_004_[1]),
    .Q(counter4[1])
  );
  (* src = "counter_sint.v:36" *)
  DFF _557_ (
    .C(clk),
    .D(_004_[2]),
    .Q(counter4[2])
  );
  (* src = "counter_sint.v:36" *)
  DFF _558_ (
    .C(clk),
    .D(_004_[3]),
    .Q(counter4[3])
  );
  (* src = "counter_sint.v:36" *)
  DFF _559_ (
    .C(clk),
    .D(_004_[4]),
    .Q(counter4[4])
  );
  assign _263_[31:6] = 26'h0000000;
  assign _264_[31:6] = 26'h0000000;
  assign _265_[31:6] = 26'h0000000;
  assign _266_[31:6] = 26'h0000000;
  assign _267_[31:6] = 26'h0000000;
  assign _285_[1:0] = idx[1:0];
  assign _286_[2] = idx[2];
  assign { _303_[31:4], _303_[0] } = { 27'h0000000, _263_[5], counter0[0] };
  assign { _304_[31:4], _304_[0] } = { 27'h0000000, _264_[5], counter1[0] };
  assign { _305_[31:4], _305_[0] } = { 27'h0000000, _265_[5], counter2[0] };
  assign { _306_[31:4], _306_[0] } = { 27'h0000000, _266_[5], counter3[0] };
  assign { _307_[31:4], _307_[0] } = { 27'h0000000, _267_[5], counter4[0] };
  assign _069_ = idx[2];
  assign _067_ = idx[0];
  assign _068_ = idx[1];
  assign _031_ = IDLE;
  assign _260_ = req;
  assign valid_sint = _262_;
  assign _052_ = counter4[0];
  assign _066_ = fifo4_pop;
  assign _053_ = counter4[1];
  assign _054_ = counter4[2];
  assign _055_ = counter4[3];
  assign _056_ = counter4[4];
  assign data_out_sint[0] = _057_;
  assign data_out_sint[1] = _058_;
  assign data_out_sint[2] = _059_;
  assign data_out_sint[3] = _060_;
  assign data_out_sint[4] = _061_;
  assign _261_ = reset_L;
  assign _004_[0] = _026_;
  assign _004_[1] = _027_;
  assign _004_[2] = _028_;
  assign _004_[3] = _029_;
  assign _004_[4] = _030_;
  assign _003_[0] = _021_;
  assign _003_[1] = _022_;
  assign _003_[2] = _023_;
  assign _003_[3] = _024_;
  assign _003_[4] = _025_;
  assign _047_ = counter3[0];
  assign _065_ = fifo3_pop;
  assign _048_ = counter3[1];
  assign _049_ = counter3[2];
  assign _050_ = counter3[3];
  assign _051_ = counter3[4];
  assign _002_[0] = _016_;
  assign _002_[1] = _017_;
  assign _002_[2] = _018_;
  assign _002_[3] = _019_;
  assign _002_[4] = _020_;
  assign _042_ = counter2[0];
  assign _064_ = fifo2_pop;
  assign _043_ = counter2[1];
  assign _044_ = counter2[2];
  assign _045_ = counter2[3];
  assign _046_ = counter2[4];
  assign _001_[0] = _011_;
  assign _001_[1] = _012_;
  assign _001_[2] = _013_;
  assign _001_[3] = _014_;
  assign _001_[4] = _015_;
  assign _037_ = counter1[0];
  assign _063_ = fifo1_pop;
  assign _038_ = counter1[1];
  assign _039_ = counter1[2];
  assign _040_ = counter1[3];
  assign _041_ = counter1[4];
  assign _000_[0] = _006_;
  assign _000_[1] = _007_;
  assign _000_[2] = _008_;
  assign _000_[3] = _009_;
  assign _000_[4] = _010_;
  assign _032_ = counter0[0];
  assign _062_ = fifo0_pop;
  assign _033_ = counter0[1];
  assign _034_ = counter0[2];
  assign _035_ = counter0[3];
  assign _036_ = counter0[4];
endmodule
