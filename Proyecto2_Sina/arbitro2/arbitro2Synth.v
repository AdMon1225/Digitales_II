/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* top =  1  *)
(* src = "arbitro2Synth.v:1" *)
module arbitro2Synth(reset, clk, muxout, emptyFIFO, almost_fullFIFO, pop, push);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  (* src = "arbitro2Synth.v:5" *)
  input [3:0] almost_fullFIFO;
  (* src = "arbitro2Synth.v:2" *)
  input clk;
  (* src = "arbitro2Synth.v:4" *)
  input emptyFIFO;
  (* src = "arbitro2Synth.v:3" *)
  input [11:0] muxout;
  (* src = "arbitro2Synth.v:6" *)
  output pop;
  (* src = "arbitro2Synth.v:7" *)
  output [3:0] push;
  (* src = "arbitro2Synth.v:2" *)
  input reset;
  NOT _09_ (
    .A(muxout[11]),
    .Y(_00_)
  );
  NOT _10_ (
    .A(muxout[10]),
    .Y(_01_)
  );
  NOT _11_ (
    .A(emptyFIFO),
    .Y(_02_)
  );
  NOR _12_ (
    .A(almost_fullFIFO[0]),
    .B(almost_fullFIFO[3]),
    .Y(_03_)
  );
  NAND _13_ (
    .A(_02_),
    .B(_03_),
    .Y(_04_)
  );
  NOR _14_ (
    .A(almost_fullFIFO[1]),
    .B(almost_fullFIFO[2]),
    .Y(_05_)
  );
  NAND _15_ (
    .A(reset),
    .B(_05_),
    .Y(_06_)
  );
  NOR _16_ (
    .A(_04_),
    .B(_06_),
    .Y(pop)
  );
  NAND _17_ (
    .A(_01_),
    .B(pop),
    .Y(_07_)
  );
  NOR _18_ (
    .A(muxout[11]),
    .B(_07_),
    .Y(push[0])
  );
  NAND _19_ (
    .A(muxout[10]),
    .B(pop),
    .Y(_08_)
  );
  NOR _20_ (
    .A(muxout[11]),
    .B(_08_),
    .Y(push[1])
  );
  NOR _21_ (
    .A(_00_),
    .B(_07_),
    .Y(push[2])
  );
  NOR _22_ (
    .A(_00_),
    .B(_08_),
    .Y(push[3])
  );
endmodule
